1
00:00:00,220 --> 00:00:05,920
Só nesse capítulo mas vamos trabalhar a orientação a objeto e esse paradigma de orientação a objeto

2
00:00:05,920 --> 00:00:10,530
tem tudo a ver com classe e com os objetos que a gente trabalhou em outro capítulo.

3
00:00:10,620 --> 00:00:15,480
Quando você pensa em uma aplicação eu queria mostrar para vocês fazer aqui algum desenho para ficar

4
00:00:15,480 --> 00:00:17,120
um pouco mais fácil.

5
00:00:17,120 --> 00:00:21,930
Estou querendo dizer quando você pensa na aplicação grande você tem uma boa época.

6
00:00:22,140 --> 00:00:27,410
Na verdade a Apple nada mais é do que um conjunto de classes que você vai definir.

7
00:00:27,420 --> 00:00:33,840
Você vai definir várias classes dentro de pacotes e tamanhos porque eu tenho um pacote com um determinado

8
00:00:33,840 --> 00:00:38,660
nome e outro pacote com várias classes dentro de um outro pacote.

9
00:00:38,670 --> 00:00:42,510
Você tem outras classes aqui por exemplo e um outro pacote.

10
00:00:42,510 --> 00:00:47,980
Então você organiza a sua aplicação em pacotes de classes e essas classes vão interagir entre si.

11
00:00:47,980 --> 00:00:49,810
Essa classe depende dessa.

12
00:00:49,940 --> 00:00:56,430
Essa depende dessa que depende dessa essa que depende dessa dependência entre as classes e na verdade

13
00:00:56,460 --> 00:01:03,210
que você tem uma aplicação a partir dessa aplicação você tem um ponto de entrada e começa a partir de

14
00:01:03,210 --> 00:01:04,120
um método.

15
00:01:04,330 --> 00:01:08,410
E a partir desse método meio uma classe baixa de outra classe que chama a outra.

16
00:01:08,670 --> 00:01:15,420
E aí você consegue ter uma aplicação real uma aplicação completa e no momento que você vai quebrar uma

17
00:01:15,420 --> 00:01:21,690
aplicação grande em várias classes diferentes e obviamente essas classes vão ser distanciadas para gerar

18
00:01:21,690 --> 00:01:22,860
objetos.

19
00:01:22,860 --> 00:01:29,810
Você vai querer muito algo muito natural e algo muito desejável você querer usar código.

20
00:01:29,910 --> 00:01:35,610
Você não vai por exemplo eu tenho uma lógica pra fazer um cálculo de imposto na minha aplicação você

21
00:01:35,610 --> 00:01:41,790
não quer pegar essa lógica do cálculo do imposto e por exemplo sair replicando essa mesma lógica em

22
00:01:41,790 --> 00:01:44,630
vários locais você vai querer usar código.

23
00:01:44,670 --> 00:01:49,860
Existem algumas estratégias de uso mais primitivo é o control C control.

24
00:01:49,860 --> 00:01:52,370
Você copia o código de um lugar e coloca em outro.

25
00:01:52,420 --> 00:01:58,860
Eu não vou ser digamos assim hipócrita com vocês em algumas situações mais simples de um código menos

26
00:01:58,860 --> 00:02:05,160
importante que eu estou ali fazendo talvez uma prova de conceito pra testar algum alguma coisa aprender

27
00:02:05,160 --> 00:02:11,410
alguma funcionalidade especial opera lá um código propio mas esse tipo de prática adotada em cenários

28
00:02:11,410 --> 00:02:17,880
reais cenários reais você vai querer criar um objeto criar uma classe com alguma funcionalidade que

29
00:02:17,880 --> 00:02:20,670
você vai usar isso em outras partes do seu sistemas.

30
00:02:20,790 --> 00:02:25,570
Mas vamos entrar em mais detalhes sobre algumas das técnicas de uso mais para frente.

31
00:02:25,990 --> 00:02:33,120
Mas nessa aula quero falar especificamente da técnica de composição composição e quando você tem um

32
00:02:33,120 --> 00:02:39,720
objeto mais complexo esse objeto em vez de você implementar tudo dentro do objeto você quebra e outros

33
00:02:39,720 --> 00:02:46,150
objetos menores por exemplo se você vai modelar um carro um carro e um objeto complexo.

34
00:02:46,170 --> 00:02:52,140
Se você for realmente colocar isso pra implementar um sistema que vai fazer todo o monitoramento de

35
00:02:52,140 --> 00:02:57,780
um carro de uma oficina por exemplo um sistema que você vai colocar vários sensores no carro e ele vai

36
00:02:57,780 --> 00:03:03,780
precisar detectar problemas no motor na injeção eletrônica nas portas nos freios nos pneus.

37
00:03:03,780 --> 00:03:09,210
Então um sistema desse provavelmente você vai modelar um carro muito mais próximo que é o carro na vida

38
00:03:09,210 --> 00:03:15,750
real e eu não vejo nesse sistema você criando uma única classe que vai representar o carro de ponta

39
00:03:15,750 --> 00:03:16,420
a ponta.

40
00:03:16,560 --> 00:03:22,500
Você vai criar um objeto carro só que o objeto o carro como sendo objeto agregador que tem todas as

41
00:03:22,500 --> 00:03:23,310
outras partes.

42
00:03:23,310 --> 00:03:28,380
Você vai usar outras classes ou outros objetos para compor o carro.

43
00:03:28,680 --> 00:03:30,410
Então o carro terá um motor.

44
00:03:30,690 --> 00:03:38,530
O carro terá muitas portas um carro terá vários pneus que vai ter um pneu vai ter sei lá uma câmara

45
00:03:38,530 --> 00:03:40,670
ou vai ter um ar algum coisa do tipo certo.

46
00:03:40,680 --> 00:03:47,070
Então um objeto é composto por outros objetos então pegando aqui alguns exemplos para ficar simples.

47
00:03:47,070 --> 00:03:55,740
Você tem um objeto do tipo carro pra começar com o exemplo que eu dei e o carro tem uma relação com

48
00:03:55,750 --> 00:03:56,570
outro.

49
00:03:56,580 --> 00:04:00,200
Outra classe ou outro objeto chamado motor.

50
00:04:00,430 --> 00:04:07,520
E essa relação aqui é uma relação um para um ou seja um carro tem motor e o motor pertence a um carro.

51
00:04:07,530 --> 00:04:15,370
Outra relação por exemplo um outro exemplo seria eu criar aqui por exemplo um clássico Man e uma classe

52
00:04:15,390 --> 00:04:23,990
um filho ou uma classe um pedido Eu vou colocar aqui pedido e uma classe item de pedido.

53
00:04:23,990 --> 00:04:31,060
Então você tem que selar uma compra que você faz no site certo colocar aqui voltar só para colocar dirigir

54
00:04:31,100 --> 00:04:39,300
compra e você tem os itens que você comprou certa classe item e a relação que eu tenho aqui é uma relação

55
00:04:39,420 --> 00:04:48,000
de compra tem vários itens ou itens um compra pode ter apenas um item pode T2 e T3 pode ser comprado

56
00:04:48,300 --> 00:04:54,690
50 coisas dentro de uma mesma compra certa então a relação que tem entre compra e tem um relação.

57
00:04:54,750 --> 00:05:02,540
Mim Quando você pensa em você pensa em coleção que pode o que a gente viu no capítulo passado pode ser

58
00:05:02,540 --> 00:05:03,420
um.

59
00:05:03,810 --> 00:05:10,270
Pode ser um bichinho pode ser um Mac pode ser várias coisas que você pode usar pode ser uma receita.

60
00:05:10,320 --> 00:05:16,170
Então você pode modelar digamos assim um grupo de itens dentro de uma compra como sendo um estrutura

61
00:05:16,440 --> 00:05:23,400
que a gente viu no capítulo passado usar isso ou mesmo algum colégio e você tem um outro tipo de relacionamento

62
00:05:23,700 --> 00:05:25,750
que você tem por exemplo aqui Tio.

63
00:05:25,960 --> 00:05:30,770
Uma classe útil e uma classe Sobrinho então tem uma classe Sobrinho.

64
00:05:30,840 --> 00:05:39,540
Essa é uma relação de Brain ou seja para mim seja útil pode ter vários sobrinhos e o sobrinho pode ter

65
00:05:39,540 --> 00:05:40,520
vários tios.

66
00:05:40,620 --> 00:05:44,280
Então essa é uma relação de composição um objeto.

67
00:05:44,280 --> 00:05:49,460
Ele é composto por outros objetos e você vai ter que relacionar digamos assim as classes.

68
00:05:49,470 --> 00:05:55,410
Até porque quando você quer construir uma aplicação você precisa realmente relacionar essas classes

69
00:05:55,410 --> 00:06:00,060
e outra coisa que você tem que ter cuidado e esse aqui é um cenário de aplicação que me parece ok.

70
00:06:00,070 --> 00:06:06,960
Mas se você tiver a aplicação dessa forma em que todas as classes dependem de todo mundo certo você

71
00:06:06,960 --> 00:06:09,620
vai ter uma aplicação muito mais difícil de manter.

72
00:06:09,930 --> 00:06:15,970
Porque qualquer classe depende da outra que depende dessa que depende dessa equipe depende dessa.

73
00:06:16,110 --> 00:06:22,050
Você percebe quanto mais relacionamento você tiver entre as classes mais difícil vai ser você manter

74
00:06:22,050 --> 00:06:22,530
o sistema.

75
00:06:22,530 --> 00:06:23,310
Por quê.

76
00:06:23,580 --> 00:06:31,010
Porque se você fizer uma mudança que eventualmente essa mudança pode impactar essa classe pode impactar

77
00:06:31,020 --> 00:06:33,070
essa pode impactar essa outra.

78
00:06:33,250 --> 00:06:39,090
E esse impacto pode gerar um impacto aqui outro impacto aqui um aqui que pode gerar um impacto aqui

79
00:06:39,100 --> 00:06:44,640
nesse aqui ou seja às vezes uma mudança em um único local saiu gerando efeitos colaterais em várias

80
00:06:44,640 --> 00:06:49,650
partes do seu sistema então é necessário haver relacionamento entre as classes.

81
00:06:49,650 --> 00:06:56,430
Não existe por exemplo no projeto uma aplicação porque eu criei uma aplicação web e desde dessa época

82
00:06:56,430 --> 00:07:00,240
você tem várias classes não vou colocá las em aqui.

83
00:07:00,840 --> 00:07:02,320
Os pacotes não certo.

84
00:07:02,430 --> 00:07:06,920
Imagine que essas classes estão em pacotes diferentes.

85
00:07:06,960 --> 00:07:14,460
Então você tem uma Apple com várias classes você tem aqui um ponto de entrada a partir do método chamado

86
00:07:14,730 --> 00:07:16,680
e nenhuma classe se relaciona com nada.

87
00:07:16,680 --> 00:07:17,790
Como é que existe isso.

88
00:07:17,790 --> 00:07:22,770
Não dá para existir um sistema que não há relacionamento entre as classes ou seja a classe ela não pode

89
00:07:22,770 --> 00:07:25,140
ser uma ilha isolada do sistema.

90
00:07:25,140 --> 00:07:27,750
Então se você tem um sistema que dê um metro no meio.

91
00:07:27,840 --> 00:07:29,950
Essa classe depende dessa.

92
00:07:29,950 --> 00:07:33,000
Essa depende dessa e essa depende dessa.

93
00:07:33,120 --> 00:07:36,140
Significa que o seu sistema se resume a isso aqui.

94
00:07:36,150 --> 00:07:42,090
Certo O resto não tem comunicação não há uma relação entre essas classes Bracalli a porta de entrada

95
00:07:42,090 --> 00:07:43,290
do seu sistema aqui.

96
00:07:43,620 --> 00:07:48,490
Então tudo isso aqui é desnecessário então tem que haver sim relacionamento entre as classes.

97
00:07:48,510 --> 00:07:53,860
O que não pode acontecer é você ter uma relação extremamente você ter uma alta dependência.

98
00:07:53,910 --> 00:08:00,030
Certo Um alto quem chama acoplamento entre as classes e isso sim pode gerar problemas exatamente pelo

99
00:08:00,030 --> 00:08:00,570
que eu falei.

100
00:08:00,570 --> 00:08:03,860
Se você tiver que alterar alguma coisa em uma classe.

101
00:08:04,040 --> 00:08:08,540
Isso eventualmente pode gerar efeito em cascata em todas as outras classes.

102
00:08:08,550 --> 00:08:14,010
Isso será um problema muito grande vai ser muito difícil você conseguir manter um sistema desse jeito

103
00:08:14,280 --> 00:08:21,220
mas o que eu quero falar com vocês é exatamente esse tipo de uso aqui que é um uso baseado em composição.

104
00:08:21,240 --> 00:08:24,600
Você tem essa capacidade de relacionar os objetos.

105
00:08:24,600 --> 00:08:30,480
E aqui eu vou mostrar três exemplos um exemplo pra mim seja a relação direta que pode ser uma relação

106
00:08:30,930 --> 00:08:34,650
unidirecional ou seja o carro depende do motor.

107
00:08:34,650 --> 00:08:39,030
O motor não depende do carro pode ser uma solução ou então não.

108
00:08:39,060 --> 00:08:43,410
O motor depende do carro cada um voltou uma relação bidirecional.

109
00:08:43,530 --> 00:08:49,020
Tanto a Classical tem uma relação com o motor como a classe Motor tem uma relação com o carro também

110
00:08:49,020 --> 00:08:51,510
é possível fazer isso da orientação objeto.

111
00:08:51,510 --> 00:08:58,050
Você tem uma relação um mim seja uma compra tem vários itens e você pode inclusive colocar dentro do

112
00:08:58,050 --> 00:09:00,460
item numa referência para a compra.

113
00:09:00,700 --> 00:09:06,450
E você também tem uma relação para a gente tem vários sobrinhos e o sobrinho tem vários tios e então

114
00:09:06,450 --> 00:09:08,310
vou mostrar um pouquinho pra vocês.

115
00:09:08,310 --> 00:09:15,540
Essas relações é um tipo de uso baseado em composição ou seja um objeto mais complexo e composto por

116
00:09:15,540 --> 00:09:18,480
outros objetos tem a referência de outros objetos.

117
00:09:18,480 --> 00:09:24,300
Fico por aqui nessa explicação breve e na próxima aula já fazer alguns exemplos mostrando esses cenários

118
00:09:24,300 --> 00:09:26,990
a relação para um Brain Training.
