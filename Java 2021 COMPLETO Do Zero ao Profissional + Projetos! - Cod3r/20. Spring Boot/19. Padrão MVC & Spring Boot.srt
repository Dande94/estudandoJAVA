1
00:00:00,070 --> 00:00:05,480
Pessoal na sala quero complementar aquilo que eu falei na aula passada que foi um vídeo que eu gravei

2
00:00:05,490 --> 00:00:06,920
alguns anos atrás.

3
00:00:06,980 --> 00:00:13,140
O segundo vídeo do canal do antigo canal de programação na índia tem um canal novo na cauda que o antigo

4
00:00:13,140 --> 00:00:15,250
foi perdido e foi visitá la.

5
00:00:15,250 --> 00:00:17,730
O canal tem muito conteúdo legal também pra vocês.

6
00:00:17,730 --> 00:00:22,650
Basta entrar no YouTube ponto com coloca la como você vai ver no nosso canal.

7
00:00:22,650 --> 00:00:27,750
Beleza então aqui eu quero complementar com um texto principalmente contextualizando aquilo que a gente

8
00:00:27,750 --> 00:00:33,990
viu do padrão arquitetural ingressei para dentro do nosso a nossa aplicação com experimentos.

9
00:00:34,350 --> 00:00:39,590
Então a gente sabe que tudo começa a partir de uma requisição no Brasil.

10
00:00:39,630 --> 00:00:47,370
O Brasil faz uma creche e a gente sabe que o protocolo HTTP ele é baseado na requisição e resposta é

11
00:00:47,370 --> 00:00:54,840
feito a requisição é lá no lado do servidor vai ter uma aplicação que eu vou colocar aqui dentro desse

12
00:00:54,840 --> 00:00:58,560
quadrado uma aplicação usando os tributos certo.

13
00:00:58,590 --> 00:01:05,190
Então quem é o primeiro pedaço de software digamos assim que vai receber essa requisição antes de entrar

14
00:01:05,190 --> 00:01:06,720
na nossa aplicação.

15
00:01:06,780 --> 00:01:13,770
Quem vai digamos assim tratar a requisição e o servidor que está em embutido dentro da nossa aplicação

16
00:01:13,770 --> 00:01:14,440
servidor.

17
00:01:14,640 --> 00:01:18,870
Que colocar que está para colocar o card aqui embaixo.

18
00:01:19,080 --> 00:01:22,100
Pronto o Tocantins vai receber a aquisição de um enquete.

19
00:01:22,410 --> 00:01:27,770
Ele está executando por exemplo na porta 80 80 por algum motivo disse ele.

20
00:01:28,240 --> 00:01:35,590
O aplicativo dá uns bons riscos a mais aqui mas beleza cara que está rodando na porta 80 80 quando chegou

21
00:01:35,600 --> 00:01:36,720
não tão quente.

22
00:01:36,720 --> 00:01:46,320
Ele vai passar requisição para o front de controle que no caso do experiente é um cara chamado de esperto.

23
00:01:46,370 --> 00:01:52,770
A gente não vai entrar muito no mérito do que é um século antes mas de qualquer forma é um código Java

24
00:01:52,830 --> 00:02:00,410
que vai atender uma requisição HTTP e chegou a requisição e essa requisição HTTP ela tem dentro dela.

25
00:02:00,450 --> 00:02:09,390
Obviamente o RL ou seja a partir da RL e a partir do momento que nós definimos uma série de controles

26
00:02:09,390 --> 00:02:11,870
aqui você tem um controle.

27
00:02:12,270 --> 00:02:21,300
Você tem que o controle 2 Você tem aqui um controle e três todos eles com alguma anotação certa anotados

28
00:02:21,310 --> 00:02:26,780
de tal forma que o Espinho foi capaz de detectar todos esses controles aqui.

29
00:02:26,830 --> 00:02:33,150
E de acordo com o RL que foi passada na aquisição o front de controle do experiente ele vai ser capaz

30
00:02:33,150 --> 00:02:40,230
de direcionar as requisições para o controle correto ou seja por conta que você anotou uma série de

31
00:02:40,230 --> 00:02:41,000
classes.

32
00:02:41,030 --> 00:02:47,370
O espião reconhece essas classes como sendo controladores e aí o fone de controle vai passar de outra

33
00:02:47,490 --> 00:02:52,860
de outra forma que a gente pode falar é basicamente isso que acontece por baixo dos panos quando você

34
00:02:52,860 --> 00:02:59,860
anota uma classe anota um determinado método e diz que a classe B tem um determinado RL e que o Metro

35
00:02:59,860 --> 00:03:06,700
deverá atender a um ou mais o RL de tal forma que quando a requisição chega ele passa pelo tal Card

36
00:03:06,700 --> 00:03:13,230
e passa pelo front de controle que é responsável por despachar cada uma das requisições para os controles

37
00:03:13,230 --> 00:03:19,320
que você definiu que você anotou na sua aplicação uma vez que você chegou no Controller com o objetivo

38
00:03:19,320 --> 00:03:26,010
dele o objetivo dele é exatamente controlar o fluxo que vai atender essa requisição.

39
00:03:26,010 --> 00:03:33,510
Você fez uma caixinha lá no Brasil e você fez uma requisição para a sua API aqui a sua aplicação Espinho

40
00:03:33,540 --> 00:03:41,650
bucho você está definindo uma API que tem lá que vai retornar só que vai atender requisições de Bete

41
00:03:41,680 --> 00:03:47,520
Posh Porsche elite pra inserir alterar e coisas do tipo Você fez o ricochete.

42
00:03:47,670 --> 00:03:53,610
Você percebeu por exemplo que nessa requisição foi feito um requisição do tipo POS só para simular um

43
00:03:53,610 --> 00:03:54,120
cenário.

44
00:03:54,540 --> 00:04:03,280
Então foi feito um requisição do tipo proxy e seu objetivo é que são do tipo push e cadastrar aqui um

45
00:04:03,670 --> 00:04:04,450
produto.

46
00:04:04,770 --> 00:04:10,560
Então você quer cadastrar um produto você passou um Porsche junto desse bolso você passou um série de

47
00:04:10,560 --> 00:04:12,930
dados só o nome do produto.

48
00:04:12,930 --> 00:04:19,560
O preço do produto o desconto no produto então tem uma série de informações que foi passada a partir

49
00:04:19,560 --> 00:04:20,270
desse post.

50
00:04:20,670 --> 00:04:24,550
Então essa lei provavelmente vai ter alguma coisa má.

51
00:04:24,570 --> 00:04:28,350
Produtos Bairro Novo ou simplesmente bar produtos.

52
00:04:28,350 --> 00:04:34,920
E aí você passa uma série de dados ele foi lá e bateu no controle e até um determinado método que foi

53
00:04:34,920 --> 00:04:36,450
definido dentro desse controle.

54
00:04:36,450 --> 00:04:42,270
Esse método vai perceber que ele vai precisar interagir por exemplo com a camada Model.

55
00:04:42,270 --> 00:04:47,430
Existe aqui toda uma camada móvel e tem várias coisas dentro dessa camada.

56
00:04:47,430 --> 00:04:55,130
Por exemplo regras de negócio você vai até a Camara de persistência para os dados você vai ter validações

57
00:04:55,130 --> 00:04:58,770
por exemplo quero validar um determinado produto.

58
00:04:58,800 --> 00:05:05,040
Ele tem que ter pelo preço médio que quiser o desconto não pode ser maior do que o comum que seria 100

59
00:05:05,030 --> 00:05:05,730
por cento.

60
00:05:05,740 --> 00:05:12,390
Então o fato é que o controle ele pra ele conseguir atender essa requisição ele vai precisar chamar

61
00:05:12,480 --> 00:05:13,890
a camada móvel.

62
00:05:13,890 --> 00:05:21,360
Ele chama a camada móvel a camada móvel vai interagir por exemplo com o banco de dados época que no

63
00:05:21,360 --> 00:05:28,310
caso que a gente definiu foi uma SQL ou seja interage com o banco de dados o banco de dados retorna

64
00:05:28,330 --> 00:05:33,390
19 inserir corretamente tátil Haiti do novo produto que foi cadastrado.

65
00:05:33,390 --> 00:05:40,800
O modelo diz que o controle deu tudo certo eu consegui inserida que o produto atualizado e eventualmente

66
00:05:40,800 --> 00:05:46,820
esse controle pode retornar um dado em dia só então ele pode retornar a esse dado.

67
00:05:46,930 --> 00:05:48,320
E aí ele retorna.

68
00:05:48,330 --> 00:05:51,760
Provavelmente foi esse controle que chamou foi esse controle.

69
00:05:51,780 --> 00:05:57,710
Vai responder aqui com a resposta provavelmente se a sua API.

70
00:05:57,750 --> 00:06:07,730
A resposta vai ser do tipo de som certo ou então aqueles conceitos de MVC principalmente do C do controle

71
00:06:07,810 --> 00:06:08,610
e do modem.

72
00:06:08,610 --> 00:06:14,320
Se você estiver criando um API o viu vai fazer parte da sua aplicação.

73
00:06:14,440 --> 00:06:18,650
E aí você vai focar aqui na questão do modo do viu.

74
00:06:18,660 --> 00:06:24,750
Eventualmente a gente mostra algum exemplo mais à frente que é possível que dentro do experimento você

75
00:06:24,750 --> 00:06:27,350
também lide com a parte que viu.

76
00:06:27,390 --> 00:06:34,620
Existe inclusive templates engines tem cliente e vai te ajudar a renderizar uma página por exemplo com

77
00:06:34,620 --> 00:06:37,080
dados obtidos a partir da sua aplicação.

78
00:06:37,080 --> 00:06:43,520
Lá eu quero renderizar um HTML só que esse HTML precisa considerar um conjunto de dados.

79
00:06:43,530 --> 00:06:49,340
Existe essa possibilidade e vou mostrar para vocês um exemplo e vai ficar muito mais claro o fato de

80
00:06:49,350 --> 00:06:55,600
também ter a parte do vídeo mas quando você está trabalhando com API e você está retornando dados de

81
00:06:55,610 --> 00:06:59,640
som por exemplo você em teoria não vai precisar usar viu.

82
00:06:59,630 --> 00:07:06,060
Você retorna você recebe uma requisição via controle o controle vai verificar se ele precisa interagir

83
00:07:06,060 --> 00:07:11,160
com o modem para responder aquela requisição e se ele precisar interagir com o modem ele vai chamar

84
00:07:11,160 --> 00:07:17,570
o modem eventualmente seria alguma coisa ou mesmo consultar alguma coisa boa o que você fez uma requisição

85
00:07:17,570 --> 00:07:18,710
do tipo Gate.

86
00:07:18,860 --> 00:07:23,100
E aí você chega lá no controle eu preciso obter a lista de produtos.

87
00:07:23,430 --> 00:07:28,950
Olha se eu vou a bit ali produtos eu preciso interagir com a minha camada de modelo aquela que tem a

88
00:07:28,950 --> 00:07:34,980
definição de um produto ela que tem a camara de acesso a dados de um produto então eu chamo modem o

89
00:07:35,010 --> 00:07:41,020
modem vai lá faz todo o trabalho de obter esses dados por exemplo do banco de dados pra depois o controller

90
00:07:41,030 --> 00:07:47,910
responder e tornando a lista de objetos e aí automaticamente o experiente converte lixo de objetos em

91
00:07:48,290 --> 00:07:51,060
som para ser enviado para quem solicitou.

92
00:07:51,060 --> 00:07:56,190
Para quem fez a requisição seja a resposta via de regra você está trabalhando.

93
00:07:56,440 --> 00:08:02,490
O Spring embutido e criando a API vai ser isso ou então só para dar uma visão geral uma contextualizada

94
00:08:02,490 --> 00:08:08,100
ficou super bagunçada o desenho mais o mais importante é você entendeu fluxo eu acredito que como a

95
00:08:08,100 --> 00:08:12,790
gente foi desenhando de forma cadenciado aqui durante a aula ficou bem claro isso certo.

96
00:08:12,810 --> 00:08:20,010
Então com relação à participação na eu vou deixar pra desenhar de novo na outra aula se for necessário

97
00:08:20,300 --> 00:08:26,340
gente desenhar o fluxo mostrando antes na prática a gente vai entender na prática o que é que está acontecendo

98
00:08:26,340 --> 00:08:32,380
mostrando como o obvio pode receber dados a partir de um controle ou controle e passando dados para

99
00:08:32,390 --> 00:08:33,120
áudio.

100
00:08:33,210 --> 00:08:38,370
E aí logo na sequência possa eventualmente se for necessário fazer uma aula teórica para mostrar para

101
00:08:38,370 --> 00:08:43,490
vocês que é exatamente o mesmo fluxo que foi apresentado pra vocês na aula passar.

102
00:08:43,500 --> 00:08:49,650
No ano passado eu mostrei um fluxo que não acessa dados ou seja chegou a só no controle ele chama avio

103
00:08:49,980 --> 00:08:56,820
e devolve pro Brasil e mostrei pra vocês uma requisição que chama o controle chama o modem omitem dados

104
00:08:56,820 --> 00:09:02,460
a esses dados é passado pra viu para renderizar viu e mandaram a resposta via viu aquilo ali eu estava

105
00:09:02,460 --> 00:09:09,920
contemplando uma aplicação que estava sempre endereçando a página a partir da sua aplicação vc.

106
00:09:09,990 --> 00:09:15,820
Só que nesse caso a gente está trabalhando com um cenário mais moderno a gente acaba desenvolvendo um

107
00:09:15,820 --> 00:09:24,180
API Espinho Bush retornou apenas deixou a camada de visão ou seja a sua aplicação franchise muitas vezes

108
00:09:24,180 --> 00:09:32,610
fica em outra aplicação uma aplicação JavaScript usando o framework Juliet e ouviu qualquer um frame

109
00:09:32,840 --> 00:09:34,030
desses modernos.

110
00:09:34,160 --> 00:09:41,640
Então a menos comum existe sim demanda de você construir a aplicação web site e a aplicação que as páginas

111
00:09:41,640 --> 00:09:48,130
são geradas no servidor mas via de regra as aplicações hoje em dia trabalham muito mais com essa parte

112
00:09:48,180 --> 00:09:49,350
de JavaScript.

113
00:09:49,420 --> 00:09:54,620
De qualquer forma mais na frente vou mostrar pra vocês que dentro do espírito rude você consegue sim

114
00:09:55,020 --> 00:09:57,360
gerar HTML dinamicamente.

115
00:09:57,390 --> 00:10:04,780
Esse conceito de conteúdo estático é dinâmico foi abordado lá no capítulo de conceitos sobre a web certo

116
00:10:04,790 --> 00:10:08,710
então se você tiver dúvidas sobre uma captura de conceitos.

117
00:10:08,770 --> 00:10:13,360
Dê uma olhada lá nessas aulas que são extremamente importantes mas eu vou mostrar pra vocês um outro

118
00:10:13,360 --> 00:10:19,090
cenário para que vocês possam ver como é que funciona também a geração da Abril dentro do espírito mude.

119
00:10:19,150 --> 00:10:24,100
E aí eu vou desenhar novamente pra vocês entenderem se for necessário talvez a aula prática já fique

120
00:10:24,100 --> 00:10:29,390
claro o suficiente pra você encaixar as peças na minha vc dentro do contexto do escurinho.

121
00:10:29,470 --> 00:10:35,450
Então fico por aqui por enquanto a gente só tá usando digamos assim o controle e o modo do seu controle

122
00:10:35,560 --> 00:10:41,200
já responde diretamente como foi o caso e a gente criou um cenário que era simplesmente retornar um

123
00:10:41,200 --> 00:10:41,800
estilingue.

124
00:10:41,860 --> 00:10:44,080
Ou seja a requisição chegou no controle.

125
00:10:44,080 --> 00:10:50,660
O controle retornou instruindo não chamou o modo e voltou e a requisição foi atendida apenas pelo controle.

126
00:10:50,740 --> 00:10:56,380
No caso o que a gente precisou acessar e tornar um produto por exemplo a gente precisou depender do

127
00:10:56,380 --> 00:10:56,760
molho.

128
00:10:56,760 --> 00:11:02,310
A gente pegou a classe do Model para retornar e esse modo foi gerado um dia isso.

129
00:11:02,350 --> 00:11:05,250
Agora a gente vai começar a interagir mais com o modem.

130
00:11:05,310 --> 00:11:09,970
O que nós vamos precisar acessar o banco de dados nós vamos começar a trabalhar com o banco de dados

131
00:11:09,970 --> 00:11:11,120
a partir da próxima aula.

132
00:11:11,140 --> 00:11:17,680
Aí sim vocês vão perceber de forma muito mais presente o uso no móvel já que quem vai controlar o acesso

133
00:11:17,680 --> 00:11:23,290
a dados vai ser o modo a gente vai fazer até uma certa reorganização nos pacotes para que fique ainda

134
00:11:23,290 --> 00:11:24,720
mais claro para você.

135
00:11:24,760 --> 00:11:29,640
A Camara de modelo você entender as partes que existem dentro da Camara de modelo.

136
00:11:29,920 --> 00:11:33,170
Então o pessoal fique por aqui na próxima aula a gente continua até lá.
