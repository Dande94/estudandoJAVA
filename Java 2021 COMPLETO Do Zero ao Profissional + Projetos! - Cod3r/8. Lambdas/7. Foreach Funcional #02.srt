1
00:00:00,110 --> 00:00:05,270
Penso agora em fazer o seguinte vou criar uma outra função dentro e for it certo.

2
00:00:05,280 --> 00:00:09,490
Outro método é aqui fazer o seguinte vou colocar estático.

3
00:00:09,520 --> 00:00:14,950
Posso colocar público não necessariamente se eu não colocar público por padrão aí tem visibilidade de

4
00:00:14,950 --> 00:00:21,360
fogo e pacote eventualmente até lembra algumas coisas que a gente já sabia anteriormente e que eu vou

5
00:00:21,360 --> 00:00:28,920
colocar o tipo de retorno o nome dessa desse Metro vai ser meu imprimi e aqui dentro eu vou receber

6
00:00:28,920 --> 00:00:37,560
uma string ou seja o parâmetro de nome e dentro desse método eu vou chamar o system on line passando

7
00:00:37,740 --> 00:00:46,230
a seguinte frase eu colocar aqui ou ali meu nome é igual vou concatenar com parâmetro o nome que eu

8
00:00:46,230 --> 00:00:47,280
recebi.

9
00:00:47,280 --> 00:00:48,680
A minha função é imprimir.

10
00:00:48,690 --> 00:00:50,350
Nesse caso eu vou ter fode.

11
00:00:50,420 --> 00:00:55,300
Não vou ter um retorno tipo string então para algo estático e depois de me imprimir.

12
00:00:55,310 --> 00:01:01,650
Quem recebe este nome e agora tem uma forma digamos assim personalizada de imprimir algo no console.

13
00:01:02,040 --> 00:01:07,940
E aí eu posso usar isso no contexto do lambda como também posso usar isso dentro do contexto do metro

14
00:01:07,970 --> 00:01:16,110
em referência ao fato do segundo jogo ou duplicar essa linha do lábio ou chamar de lambida 2 e em vez

15
00:01:16,110 --> 00:01:18,780
de chamar assistem aos prende Aline.

16
00:01:19,230 --> 00:01:25,520
Eu vou fazer o seguinte eu vou chamar meu imprimi passando o nome que eu recebi como parâmetro.

17
00:01:25,640 --> 00:01:31,440
E obviamente nesse caso que eu não tem um ponto e vírgula que eu estou definindo uma expressão lambda

18
00:01:31,440 --> 00:01:36,210
como parâmetro para o Metro for digital não termina com vírgula certo.

19
00:01:36,210 --> 00:01:40,400
Aqui dentro eu não tenho uma sentença de código aqui fora sim.

20
00:01:40,400 --> 00:01:43,350
De certo modo nessa linha 25 eu tenho certeza.

21
00:01:43,430 --> 00:01:48,770
Eu tenho apenas uma expressão lambda passada como parâmetro para a função forense.

22
00:01:49,130 --> 00:01:57,550
Então aqui você vai ver que nós temos lâmina 2 foi meu nome ou em meu nome é Bia ou é uma anomalia ou

23
00:01:57,570 --> 00:01:58,280
Meu nome é aqui.

24
00:01:58,620 --> 00:02:04,960
Então esse aqui foi o primeiro exemplo usando a minha função personalizado dentro da estrutura do lábio

25
00:02:04,960 --> 00:02:09,000
eu posso duplicar essa linha aqui e jogar aqui para baixo.

26
00:02:09,460 --> 00:02:16,690
Nós vamos conseguir agora usar qualquer método France 2 e eu vou colocar aqui o método referência.

27
00:02:17,690 --> 00:02:26,180
E aqui embaixo em vez de usar System Alt Ingelheim eu posso usar Fury para expor os dois pontos meu

28
00:02:26,360 --> 00:02:32,340
imprimia ou seja vou passar uma referência para a função que eu criei sem problema nenhum é o mesmo

29
00:02:32,340 --> 00:02:36,950
jeito de você chamar uma função que já foi criada e que já está presente na API do Java.

30
00:02:37,320 --> 00:02:43,560
Eu também posso passar uma referência para a função que eu acabei de criar e nesse caso como essa função

31
00:02:43,560 --> 00:02:49,470
faz exatamente aquilo que eu quero já imprime e da forma personalizada que eu quero eu posso e beneficiado

32
00:02:49,470 --> 00:02:55,710
um método para França ou seja lá aparece um método para que cada vez que ele percorrer um dos elementos

33
00:02:55,710 --> 00:03:02,150
desse nessa lista de aprovados ele baixa mais essa função passando cada um dos elementos como parâmetro

34
00:03:02,210 --> 00:03:03,100
o meu imprimi.

35
00:03:03,120 --> 00:03:09,540
E aí sim ele vai imprimir no console essa frase executando finalmente o nosso último exemplo um método

36
00:03:09,540 --> 00:03:10,770
de Radio France 2.

37
00:03:11,010 --> 00:03:11,910
Oi meu nome.

38
00:03:12,040 --> 00:03:13,540
Meu nome é Bia Merlin.

39
00:03:13,560 --> 00:03:14,260
Meu nome é Guy.

40
00:03:14,670 --> 00:03:17,550
Exatamente como a gente fez nos outros exemplos.

41
00:03:17,550 --> 00:03:22,410
Certo então muita coisa legal que você tem a forma tradicional que a gente já estava acostumado e a

42
00:03:22,410 --> 00:03:27,480
forma passando lambida ou mesmo usando a referência por um método que é algo muito interessante.

43
00:03:27,570 --> 00:03:33,780
Nem sempre você vai conseguir fazer tudo com referência passa na referência do método porque nem sempre

44
00:03:33,780 --> 00:03:39,450
você vai ter exatamente um metro atendendo para você a necessidade a não ser que você crie seus próprios

45
00:03:39,450 --> 00:03:45,160
métodos e isso pode ajudar bastante mas você sempre terá a Holanda pra recorrer também né pra usar.

46
00:03:45,450 --> 00:03:51,430
Então se você receber os parâmetros você tem muito mais flexibilidade para fazer o uso de uma função

47
00:03:51,430 --> 00:03:51,920
lambda.

48
00:03:52,050 --> 00:03:57,870
Mas aí de qualquer forma se a referência para o método não for suficiente porque não não tem um nível

49
00:03:57,870 --> 00:04:00,990
de necessidade que você vai precisar em determinado momento.

50
00:04:00,990 --> 00:04:07,320
Você pode usar o lambda Sim na verdade são duas formas muito interessantes e com apenas uma única linha

51
00:04:07,500 --> 00:04:13,470
você consegue fazer o que potencialmente sem usar lambida você briga em várias linhas está com referência

52
00:04:13,470 --> 00:04:19,170
à função e fica ainda mais curto a sintaxe é como eu falei pra vocês depois que você se acostuma.

53
00:04:19,170 --> 00:04:23,690
Depois se você entende como você pode explorar isso ao seu favor.

54
00:04:23,770 --> 00:04:29,310
E principalmente depois que a gente passar pelos exercícios entender um pouco mais os recursos da programação

55
00:04:29,310 --> 00:04:34,290
funcional eu tenho certeza que esse tipo de código não trará confusão pra você uma vez que você passar

56
00:04:34,290 --> 00:04:40,590
por essa fase de exercícios e também entender os recursos e os benefícios de trabalhar com esse tipo

57
00:04:40,590 --> 00:04:45,900
de abordagem mas como falei Se você olha aqui por exemplo na minha mente 2 não é tão difícil do ponto

58
00:04:45,900 --> 00:04:49,200
de vista de inglês interpretar o que está acontecendo aqui.

59
00:04:49,380 --> 00:04:53,140
Para cada elemento de aprovado chame System Alt Print além.

60
00:04:53,160 --> 00:04:57,710
Então vai premiar quem vai imprimir cada um dos elementos aprovados.

61
00:04:57,720 --> 00:05:04,600
Por mais que isso aconteça por por mais que isso eventualmente gere algum desconforto inicial vá por

62
00:05:04,620 --> 00:05:09,400
mim que depois de um tempo depois que você estiver acostumado com esse tipo de abordagem isso vai ficar

63
00:05:09,400 --> 00:05:14,150
bem tranquilo e você vai conseguir usar isso de uma forma bem tranquila sem nenhum problema.

64
00:05:14,170 --> 00:05:19,720
Então nós temos ainda muitos exemplos nesse capítulo e também no outro capítulo falando sobre programação

65
00:05:19,720 --> 00:05:21,250
funcional e até a próxima aula.
