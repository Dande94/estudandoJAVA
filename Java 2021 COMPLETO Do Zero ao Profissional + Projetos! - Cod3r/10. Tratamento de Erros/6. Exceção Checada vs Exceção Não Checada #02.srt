1
00:00:00,140 --> 00:00:06,240
Só agora falam um pouquinho mais em detalhe dos tipos de exceção que eu falei no ano passado que essa

2
00:00:06,230 --> 00:00:08,570
ação checada e não checado.

3
00:00:08,760 --> 00:00:14,650
Certo Eu já tinha falado pra vocês anteriormente que existe uma classe chamada trombou ou seja que a

4
00:00:14,650 --> 00:00:21,900
raiz de todas as exceções todos os erros e exceções dentro do Java e qualquer classe que esteja abaixo

5
00:00:21,900 --> 00:00:29,430
de tromba pode usar palavrinha entrou associado a uma instância de uma classe e você cria uma nova acepção

6
00:00:29,440 --> 00:00:35,550
cria um objeto a partir de uma classe e pode usar o farol pra lançar um erro uma exceção.

7
00:00:36,010 --> 00:00:42,770
Então a partir do momento que você tem minha especificamente na parte de baixo então eu vou criar um

8
00:00:43,650 --> 00:00:55,210
alarme um clássico ou criar aqui quadradinho pra chamar aqui que sabe ou seja a raiz de todas as exceções

9
00:00:55,210 --> 00:01:04,740
do Java e especificamente você pode ter várias outras classes que andam Sérgio e mais especificamente

10
00:01:04,740 --> 00:01:17,700
você tem uma classe que nós fizemos no ano passado que é um tem abaixo segue então uma lanterna em que

11
00:01:17,800 --> 00:01:20,030
sábio é uma classe especial no Japão.

12
00:01:20,030 --> 00:01:20,630
Por quê.

13
00:01:21,020 --> 00:01:28,010
Porque qualquer classe que perde o lanterna e que sabe não é uma exceção conhecida como não checada.

14
00:01:28,010 --> 00:01:34,120
Ou seja você não é obrigado a defini la na assinatura do Metro que você vai lançar um Lanterna sabichão.

15
00:01:34,140 --> 00:01:38,950
Quem chama aquele Metro não é obrigado a tratar o erro usando traquejo.

16
00:01:39,200 --> 00:01:46,400
Quando você lança a própria Section ou qualquer outra exceção certa própria recebe um ou qualquer outra

17
00:01:46,490 --> 00:01:53,550
exceção que esteja sendo filho diretamente ou indireta de ACSP ou você é obrigado a tratar esse erro.

18
00:01:53,720 --> 00:02:02,360
Apenas as exceções que estão aqui especificamente para baixo e que você não tem a obrigatoriedade de

19
00:02:02,360 --> 00:02:05,800
tratar exceção e defini no método certo.

20
00:02:05,870 --> 00:02:16,580
Então vou imaginar que um determinado cenário você tem a função método que chama o método que chama

21
00:02:16,700 --> 00:02:21,410
o método 2 que chamo de Método 3 aquela ideia de pilha ação.

22
00:02:21,470 --> 00:02:30,310
Vamos supor que aqui dentro você tenha um determinado método e esse método lança uma exceção checada.

23
00:02:30,380 --> 00:02:37,340
Se você lança um acessam um checado significa que nesse método que você tem que colocá la na assinatura

24
00:02:37,340 --> 00:02:39,920
do método está faltando.

25
00:02:39,920 --> 00:02:43,740
Então ela coloca no que você tem aqui.

26
00:02:43,940 --> 00:02:50,930
Se você tem que definir especificamente na assinatura do médico esse método lança uma determinada ação.

27
00:02:50,990 --> 00:02:57,590
Por que você disse lá que lança essa exceção x então coloca aqui uma exceção x qualquer certo não importa

28
00:02:57,590 --> 00:02:58,180
o nome.

29
00:02:58,490 --> 00:03:06,050
Quando você faz isso vamos supor que você definiu isso obrigatoriamente no método que você definiu aqui

30
00:03:07,070 --> 00:03:08,540
no método 2 certo.

31
00:03:08,540 --> 00:03:15,140
Você tem que tratar o erro você tem escolha ou você pode tratar o erro ou você pode dizer na assinatura

32
00:03:15,140 --> 00:03:18,020
do Metro que ele também lançou essa ação x.

33
00:03:18,020 --> 00:03:24,100
Vamos supor que eu não quero tratar ou eu quero lançar então obrigatoriamente ser checada.

34
00:03:24,170 --> 00:03:31,880
Você tem que colocar na assinatura do método se você tem que dizer ok eu também lanço a recessão x qualquer

35
00:03:31,900 --> 00:03:37,920
equipa definir o que é uma exceção checada chegou aqui no método aspone.

36
00:03:38,000 --> 00:03:43,340
Nesse caso eu não quero lançar o seu primeiro eu quero tratar o erro então significa que dentro desse

37
00:03:43,340 --> 00:03:49,910
método aqui você vai ter vai ter que lidar com esse erro e aí você pode usar uma outra estratégia que

38
00:03:49,910 --> 00:03:54,200
é usar por exemplo ai quietos.

39
00:03:54,350 --> 00:04:00,140
Aí sim você disse que tratam eu e como você fizer um teste você pode tratar ou recebe.

40
00:04:00,500 --> 00:04:07,750
Ou então você pode tratar especificamente a exceção X que foi criada e aí significa que você chegar

41
00:04:07,750 --> 00:04:14,260
aqui no M você não precisa lidar com o erro porque o erro foi tratado no método anterior mas percebe

42
00:04:14,270 --> 00:04:20,810
que se você tiver 10 metros você não só essa ação checada no décimo e nenhum deles você quer tratar

43
00:04:20,810 --> 00:04:21,440
o erro.

44
00:04:21,470 --> 00:04:26,900
Obrigatoriamente você precisa dar outro uso na assinatura do Metro dizendo que aquele método lançou

45
00:04:26,900 --> 00:04:31,730
um erro ou seja sempre que você depende de um metro que lançou essa ação checado e você não quer tratar

46
00:04:31,730 --> 00:04:37,150
o erro dentro desse método você é obrigado também lançar as mesmas exceções checadas.

47
00:04:37,150 --> 00:04:38,040
Por quê.

48
00:04:38,060 --> 00:04:41,930
Sempre que você lançou essa ação checada você é obrigado a declarar método.

49
00:04:42,260 --> 00:04:48,170
Ou então você pode usar um traficante já no caso de uma recessão não checada como você já deve e mais

50
00:04:48,170 --> 00:04:49,010
ou menos esperar.

51
00:04:49,010 --> 00:04:59,180
Você tem aqui um método Mem que chama um método que chama um método dois que chamam o Método 3 e aí

52
00:04:59,180 --> 00:05:04,880
você lança aqui uma exceção não checar o colocar em vermelho também para dizer que é um erro você lança

53
00:05:04,880 --> 00:05:12,950
um erro mesmo que você queira tratar o erro apenas aqui no método ou então no método mem só que você

54
00:05:12,950 --> 00:05:14,690
vai receber o erro aqui.

55
00:05:14,690 --> 00:05:21,310
Só que você vai querer por exemplo aplicar um trailer e um cartucho certo.

56
00:05:21,320 --> 00:05:28,010
Então só nesse método o que você vai querer tratar os outros dois não precisam se preocupar em declarar

57
00:05:28,010 --> 00:05:33,680
nada você não precisa dizer absolutamente nada no Metro no Windows porque ele possui uma exceção não

58
00:05:33,680 --> 00:05:40,460
checada uma vez que você lança esse só não checado no Método 3 ele vai automaticamente passar essa ação

59
00:05:40,470 --> 00:05:46,940
pelo metro 2 sem você precisar escrever absolutamente nada e vai chegar no Metro do meio então essa

60
00:05:47,330 --> 00:05:51,620
é a diferença que você tem de essa ação checado é uma exceção não checada.

61
00:05:51,650 --> 00:05:57,500
Em outras palavras uma exceção checada ela não irá conseguir passar desapercebido por todos os métodos

62
00:05:57,500 --> 00:05:59,750
que eventualmente ela possa passar.

63
00:05:59,750 --> 00:06:05,750
Se ela passa por um método se você chama o método que lançou a seção checada ou você trata ou você lança

64
00:06:05,750 --> 00:06:13,240
para o outro método fatal certo já há uma exceção vantagem ou seja uma seção não checada consegue passar

65
00:06:13,240 --> 00:06:20,860
desapercebido pelos métodos porque você trata se quiser e você não precisa declarar esses métodos diretamente

66
00:06:20,860 --> 00:06:21,930
na assinatura do metro.

67
00:06:21,940 --> 00:06:26,310
Então essas são as diferenças entre essas duas abordagens leu.

68
00:06:26,440 --> 00:06:32,740
Qual é a melhor abordagem em três situações para você usar um ou você usar outra abordagem.

69
00:06:32,840 --> 00:06:39,380
Eu diria que o caminho padrão pelo mesmo caminho padrão que eu prefiro é trabalhar com exceções como

70
00:06:39,740 --> 00:06:45,640
exceções que não necessariamente você é obrigado a tratar mais essas situações que você tem.

71
00:06:45,640 --> 00:06:51,520
Você vai lançar uma exceção e você quer que obrigatoriamente o código que vai tratar que vai usar um

72
00:06:51,520 --> 00:06:55,390
determinado método trate aquela sessão de forma obrigatória.

73
00:06:55,390 --> 00:06:57,920
Aí você pode usar exceções checados.

74
00:06:58,090 --> 00:07:01,480
Vai depender da situação a depender do cenário que você está trabalhando.

75
00:07:01,510 --> 00:07:07,350
Mas na maioria dos casos eu acabo trabalhando com exceções não checar não preferência pessoal minha.

76
00:07:07,360 --> 00:07:13,810
E aí você vai definir aquilo que você acha que é melhor se você quer forçar o tratamento ou não.

77
00:07:13,810 --> 00:07:20,200
O que eu acho chato e vai ser checada é exatamente o fato de que uma vez que você lançou essa ação no

78
00:07:20,200 --> 00:07:27,730
Método 3 você quer tratar essa exceção somente no método você é obrigado a definir no método 2 que não

79
00:07:27,730 --> 00:07:31,940
necessariamente está envolvido no processo de tratamento nem da geração do erro.

80
00:07:31,960 --> 00:07:35,960
Você precisa modificar o método 2 por conta que uma ação checada.

81
00:07:36,080 --> 00:07:41,660
Isso não seção não checada me é mais simples porque você gerou o erro no método 3.

82
00:07:41,860 --> 00:07:43,590
Isso o que atrapalha Mad Men.

83
00:07:43,660 --> 00:07:49,660
Aí a exceção vai passar pelo metro 2001 se necessariamente você precisa alterar esses métodos porque

84
00:07:49,710 --> 00:07:56,000
essas ação checado por mim eu acabo preferindo na maioria dos casos não sempre fazer essa folga.

85
00:07:56,350 --> 00:08:02,650
Mas contém uma exceção que eu quero forçar a classe que chamo a tratar inclusive no nosso exercício

86
00:08:03,020 --> 00:08:08,290
do nosso projetivo no próximo capítulo provavelmente eu vou usar uma exceção checada embora seja essa

87
00:08:08,290 --> 00:08:10,870
ação naquele caso específico que eu vou usá la.

88
00:08:10,960 --> 00:08:15,730
Vai ser mais apropriado para essa ação checado então depende da situação mas se você está na dúvida

89
00:08:15,820 --> 00:08:18,220
eu iria preferir essas ações não checadas.
