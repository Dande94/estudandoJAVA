1
00:00:00,230 --> 00:00:03,520
Na sala vão achar pra vocês um pouquinho da teoria do filtro.

2
00:00:03,520 --> 00:00:07,590
A gente já falou do MAC eu falei da teoria depois gente fez um exemplo.

3
00:00:07,590 --> 00:00:12,910
Depois vou lançar um desafio e mostrar a resposta agora vou fazer esse mesmo ciclo usando o filtro.

4
00:00:12,990 --> 00:00:17,790
Nós já temos aqui a parte que eu escrevi do Mac e agora vou fazer mostram pra vocês especificamente

5
00:00:17,790 --> 00:00:18,200
do Phil.

6
00:00:18,240 --> 00:00:26,190
Imagine que você tenha aqui uma sequência nenhum estudo de dados que você tem aqui algumas informações

7
00:00:26,190 --> 00:00:29,120
dependem da linguagem certo por exemplo JavaScript.

8
00:00:29,550 --> 00:00:34,420
Ele vai usar o Harry para fazer todas essas operações então o MAC está dentro do rei.

9
00:00:34,500 --> 00:00:38,400
O filtro do rei o Edu está lendo Harry já no Java.

10
00:00:38,400 --> 00:00:44,320
Essas funções foram incorporadas dentro do texto então Shura que tem isso não a lista.

11
00:00:44,370 --> 00:00:45,380
O Harry tá certo.

12
00:00:45,380 --> 00:00:51,200
Então os termos e o mecanismo que você vai encontrar essas coisas já no Java de JavaScript.

13
00:00:51,210 --> 00:00:56,140
Melhor dizendo você vai encontrar essas mesmas funcionalidades em outra estrutura que no caso seria

14
00:00:56,470 --> 00:00:59,000
o mesmo que você usa no dia a dia no Java.

15
00:00:59,040 --> 00:01:04,920
Já tem essas funções Mac Pro Filter e tal que aqui no Java é encontrado no estranho.

16
00:01:05,280 --> 00:01:18,750
Então vamos lá vou colocar aqui uma série de números por exemplo 3 2 4 7 8 7 6 e 1 então tem 1 2 3 4

17
00:01:18,750 --> 00:01:23,520
5 6 7 8 números ou seja tem um histórico de dados com 8 valores.

18
00:01:23,640 --> 00:01:30,120
E aí eu vou aplicar o filtro e qual é a ideia de aplicar o filtro é exatamente o que o nome já diz ele

19
00:01:30,120 --> 00:01:38,160
vai filtrar os dados então aplicando aqui o filtro eu vou dizer qual é o critério que eu vou usar para

20
00:01:38,160 --> 00:01:39,450
filtrar os dados.

21
00:01:39,630 --> 00:01:45,450
Ou seja na forma normal que você faria isso provavelmente você ia filtrar os dados como você ia criar

22
00:01:45,450 --> 00:01:50,820
por exemplo um determinado rei pode ser em Java com vários valores.

23
00:01:51,000 --> 00:01:59,250
Você ia fazer um foto então você fazer um laço de repetição aqui um só percorrendo cada elemento do

24
00:01:59,250 --> 00:02:03,970
Harry dentro deste fórum você tem um teste F.

25
00:02:04,110 --> 00:02:06,480
Alguma coisa for verdadeira.

26
00:02:06,510 --> 00:02:14,790
Você ia criar um outro Harry menor e pegar apenas os dados daqui e jogar pra cá de tal forma que você

27
00:02:14,790 --> 00:02:19,280
teria um rei ou uma lista sete pode ser uma raiz pode ser um 7.

28
00:02:19,620 --> 00:02:27,000
O lixo é menor do que o original porque você aplicou algum critério de filtro aqui pra só adicionar

29
00:02:27,330 --> 00:02:30,720
dentro dessa lista que eu desse o desse 7.

30
00:02:30,990 --> 00:02:34,160
Se esse critério for satisfeito então você teria um só.

31
00:02:34,260 --> 00:02:37,790
Você teria um laço pra só então se essa condição fosse verdadeira.

32
00:02:37,790 --> 00:02:43,630
Você iria adicionar um elemento dentro dessa segunda lista que seria um filtro e uma sobre lista ou

33
00:02:43,700 --> 00:02:47,340
um subir do valor da lista original certo.

34
00:02:47,370 --> 00:02:54,090
Então seria mais ou menos essa a filosofia que você iria fazer pra implementar exatamente aquilo que

35
00:02:54,090 --> 00:02:59,970
você vai implementar no filtro de uma forma muito mais direta sem precisar ficar fazendo tudo isso aqui

36
00:02:59,970 --> 00:03:06,720
no filtro você vai definir uma função ou um lambda que vai definir exatamente qual vai ser o critério

37
00:03:06,810 --> 00:03:08,310
de filtro que você vai usar.

38
00:03:08,610 --> 00:03:13,070
E nesse caso a gente vai precisar usar um predicado ok.

39
00:03:13,230 --> 00:03:20,310
Porque você vai receber um parâmetro que é exatamente o elemento atual e ele vai retornar um valor verdadeiro

40
00:03:20,370 --> 00:03:27,000
ou falso se for verdadeiro significa que no extremo gerado final ele estará presente.

41
00:03:27,000 --> 00:03:29,600
Se for falso ele não estará no extremo final.

42
00:03:29,610 --> 00:03:34,750
Então por exemplo vamos supor que eu vou receber aqui um elemento em.

43
00:03:35,100 --> 00:03:43,530
E aí você vai fazer a seguinte lógica se em módulo 2 foi igual igual a zero.

44
00:03:43,530 --> 00:03:49,890
Em outras palavras se o número for par significa que eu quero que ele vá para o resultado final se o

45
00:03:49,890 --> 00:03:55,380
número foi embora eu quero que ele seja filtrada ou seja que ele seja descartado e não vá para a final

46
00:03:55,680 --> 00:03:57,580
diferente do mep do mapa.

47
00:03:57,600 --> 00:04:02,630
Se você tem um extreme de oito elementos o resultado será 8.

48
00:04:02,670 --> 00:04:09,210
No caso do filtro você pode ter uma historinha que tem o mesmo resultado a mesma quantidade de elementos

49
00:04:09,210 --> 00:04:09,970
do primeiro.

50
00:04:09,990 --> 00:04:15,060
No caso do filtro você pode ter um extreme com uma quantidade menor de elementos ou você pode chegar

51
00:04:15,060 --> 00:04:23,010
à situação que nenhum elemento foi passado para este time resultante porque nenhum deles gerou um resultado

52
00:04:23,100 --> 00:04:23,820
verdadeiro.

53
00:04:24,120 --> 00:04:30,360
Então nesse caso a gente tem esse aqui vai ser passado o que é pra esse aqui também.

54
00:04:30,390 --> 00:04:32,590
Esse aqui também é esse aqui também.

55
00:04:32,610 --> 00:04:40,110
Ou seja um dois três quatro elementos vão estar no ar resultante e um dois três quatro elementos foram

56
00:04:40,110 --> 00:04:43,980
filtrados porque essa expressão retorno falso.

57
00:04:44,010 --> 00:04:50,600
Então aqui eu posso criar um rei um rei leão e um extremo resultantes de quatro posições que eu votei

58
00:04:51,090 --> 00:05:01,630
2 4 8 e 6 porque o meu critério de filtro foi definir que apenas os valores são pares ou seja apenas

59
00:05:01,630 --> 00:05:07,000
os valores que essa expressão for verdadeira ele vai estar presente no final.

60
00:05:07,000 --> 00:05:13,830
Caso contrário ele será digamos assim não será considerado inocente final esse valor não estará presente.

61
00:05:13,870 --> 00:05:19,990
Ou seja o filtro ele serve para de fato você filtrar os elementos de acordo com alguma função.

62
00:05:19,990 --> 00:05:26,230
De acordo com alguma longa faixa você define a expressão que a torna verdadeiro ou falso recebe o parâmetro

63
00:05:26,240 --> 00:05:28,720
como elemento retorna verdadeiro falso.

64
00:05:28,900 --> 00:05:30,250
E aí você vai aplicar a lógica.

65
00:05:30,250 --> 00:05:38,560
Vamos supor que você tem aqui por exemplo você tem aqui um tuíte de quatro posições e assistiu de quatro

66
00:05:38,560 --> 00:05:40,130
posições dentro.

67
00:05:40,210 --> 00:05:46,300
Você tem quatro objetos certo o coloca naquele círculo se apresenta no objeto e esse objeto tem um nome

68
00:05:46,540 --> 00:05:51,040
aqui pelo nome tem o nome e esse objeto também tem um preço.

69
00:05:51,040 --> 00:05:58,360
Por exemplo 1000 200 reais tem aqui dois mil 356 reais.

70
00:05:58,390 --> 00:06:02,720
Aqui tem 30 reais e aqui tem por exemplo 97 reais.

71
00:06:02,740 --> 00:06:07,720
Ou seja você tem um instrumento que tem aqui dentro produtos que são objetos.

72
00:06:07,720 --> 00:06:15,100
Vamos supor que você quer filtrar todos os produtos que são caros que são o que tem preço maior do que

73
00:06:15,100 --> 00:06:16,360
mil reais.

74
00:06:16,360 --> 00:06:22,660
Então você iria usar a seguinte lambda Express se você recebe um produto como parâmetro e você vai fazer

75
00:06:22,810 --> 00:06:31,420
P Ponto para isso ou mesmo p outro grande ganho de peso dependendo da situação maior ou igual a mil

76
00:06:31,420 --> 00:06:32,080
reais.

77
00:06:32,440 --> 00:06:37,260
Ou seja se essa expressão aqui folgada deixa o produto estará no extremo resultante.

78
00:06:37,270 --> 00:06:40,500
Se essa expressão for falsa ele não estará presente.

79
00:06:40,840 --> 00:06:47,410
Então nesse caso nós temos os dois primeiros produtos comuns essa expressão retorna um verdadeiro e

80
00:06:47,410 --> 00:06:53,460
os dois últimos produtos não estarão presentes no filtro de tal forma que eu vou ter o meu filtro vai

81
00:06:53,530 --> 00:06:54,660
aplicar aquele filtro.

82
00:06:55,330 --> 00:07:02,050
Ou seja a resultante é a metade se todos eles fossem mais caros do que isso né que tivessem por exemplo

83
00:07:02,200 --> 00:07:05,150
9 mil sites sem esse aqui eu tenho 3 mil reais.

84
00:07:05,260 --> 00:07:11,140
Todos os elementos entraram mas esse critério de tal forma que agora todo meu Rei estará presente no

85
00:07:11,140 --> 00:07:20,320
final e tem um botequim de quatro posições no qual todos os objetos continuarão lá porque todos geraram

86
00:07:20,380 --> 00:07:27,530
o resultado positivo ou seja dentro do meu predicado que nada essa interface que eu usei e segue o elemento

87
00:07:27,540 --> 00:07:30,430
de retorno verdadeiro ou falso todos deram positivo.

88
00:07:30,580 --> 00:07:36,790
Caso eu não tenha isso por exemplo eu tenho um produto que custa dou 12 reais ou 23.

89
00:07:37,090 --> 00:07:39,620
O outro 30 reais e o outro 97.

90
00:07:39,610 --> 00:07:46,560
Nesse caso nenhum elemento estaria no meu Harry resultante de tal forma que o melhor resultante seja

91
00:07:46,560 --> 00:07:53,200
o estudo resultante seria vazio ou seja eu teria que um estranho porque aqui teria que o em vazio sem

92
00:07:53,200 --> 00:07:58,500
nenhum elemento e continuaria até nos Twin mas eu não teria mais nenhum elemento para poder consumir

93
00:07:58,500 --> 00:08:01,930
de interesse isto porque todos os meses foram filtrados.

94
00:08:01,930 --> 00:08:08,770
Então essa é a lógica do filtro é o filtro ele serve pra filtrar ou seja pegar uma seleção dos elementos

95
00:08:08,770 --> 00:08:15,100
que estão destruindo baseado em cima de um predicado de uma função que recebe o elemento como parâmetro

96
00:08:15,380 --> 00:08:20,560
e retorno verdadeiro ou falso desenvolver adequadamente irá continuar estará presente neste filme resultante

97
00:08:20,560 --> 00:08:21,620
se for falso.

98
00:08:21,790 --> 00:08:28,420
Esse elemento não estará presente na China resultante e esse tipo de operação seja uma única linha você

99
00:08:28,450 --> 00:08:31,390
consegue evitar um laço forte.

100
00:08:31,600 --> 00:08:38,610
Você consegue evitar ter que criar manualmente um segundo a rede liste por exemplo para que você a partir

101
00:08:38,610 --> 00:08:44,830
do momento que for percorrendo esses elementos aqui usando uma fole tem que fazer também um ETF prata

102
00:08:44,830 --> 00:08:50,350
está aqui uma expressão somente aqui dentro sim essa expressão for verdadeira que você vai adicionando

103
00:08:50,680 --> 00:08:56,450
os elementos em um outro array ou seja muito mais trabalho para você fazer ao invés de você ter aqui

104
00:08:56,500 --> 00:09:03,110
apenas uma única lâmina se acham que vai resolver isso pra você todo o detalhe interno é resolvido pela

105
00:09:03,470 --> 00:09:08,980
Times ou seja resolvido pelo Java o que é muito legal porque fica muito mais simples pra você fazer

106
00:09:08,980 --> 00:09:15,610
essa lógica espero que no próximo exemplo que fique claro os benefícios de você usar essa abordagem

107
00:09:15,610 --> 00:09:21,540
funcional eu espero lá para te mostrar um exemplo prático do Filter que é uma função também muito importante

108
00:09:21,550 --> 00:09:22,980
dentro desse contexto funcional.
