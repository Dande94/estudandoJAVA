1
00:00:00,180 --> 00:00:03,920
Agora nós vamos incorporar o padrão Observem no nosso joguinho.

2
00:00:03,960 --> 00:00:08,580
Isso não significa que a gente vai fazer tudo agora porque algumas coisas vão surgir no momento que

3
00:00:08,580 --> 00:00:12,800
a gente tiver precisando determinadas informações da interface gráfica.

4
00:00:12,810 --> 00:00:15,230
Como será uma nova interface gráfica.

5
00:00:15,390 --> 00:00:20,670
é possível que a gente precisa transformar como eu falei pra vocês alguns metros em público os outros

6
00:00:20,670 --> 00:00:27,570
metros a gente pode até colocar como sendo privado for o mesmo excluir ou que não seriam mais metros

7
00:00:27,570 --> 00:00:32,370
necessários que vai fazer algumas limpezas no decorrer do nosso código.

8
00:00:32,610 --> 00:00:39,540
Então a primeira eu vou criar aqui em vez de ter uma classe que representa um evento eu vou.

9
00:00:39,540 --> 00:00:46,140
Nesse cenário vou precisar apenas ter uma enumeração vou precisar apenas ter o tipo de evento que foi

10
00:00:46,140 --> 00:00:53,250
gerado se for um evento de abri se for um evento de marcar desmarcar um evento de explosão então nesse

11
00:00:53,250 --> 00:00:57,680
cenário basicamente que eu vou precisar vai ser uma enumeração por isso eu não vou criar uma clássico

12
00:00:57,730 --> 00:01:05,660
criar um numeração então vou chamar o campo evento e vou tentar minha numeração colocar o Zé Pedro.

13
00:01:05,670 --> 00:01:14,820
Primeiramente vai ser igual abri o segundo vai se marcar terceiro vai ser o 10 marcar e o outro vai

14
00:01:14,820 --> 00:01:16,390
ser o ex.

15
00:01:16,510 --> 00:01:17,040
Pode.

16
00:01:17,400 --> 00:01:23,250
Então esses são os eventos quatro eventos que eu vou precisar para quando acontecer um evento eu vou

17
00:01:23,270 --> 00:01:28,750
notificar quem está interessado e vou passar basicamente essa informação é o suficiente.

18
00:01:28,800 --> 00:01:31,020
Não preciso da hora que acontecer um evento.

19
00:01:31,020 --> 00:01:38,250
Não preciso saber se foi clicado mouse o botão direito ou esquerdo boa parte dessas questões são questões

20
00:01:38,250 --> 00:01:43,230
de interface que eu estou simplesmente preocupado em saber qual o evento que acontece em determinados

21
00:01:43,230 --> 00:01:48,060
momentos e para isso nós vamos começar a implementar algumas coisas aqui dentro do campo.

22
00:01:48,060 --> 00:01:55,620
A primeira coisa que a gente precisa fazer dentro da classe campo é ter uma lista com todos os observa

23
00:01:55,740 --> 00:01:57,490
que a gente precisa.

24
00:01:57,530 --> 00:02:00,130
Ali você poderia criar uma interface.

25
00:02:00,150 --> 00:02:06,990
Eu posso sim criar uma interface relacionada ao observador do campo por exemplo eu posso criar aqui

26
00:02:07,530 --> 00:02:16,770
uma interface e o interface que eu vou chamar aqui de campo observador é relacionado ao campo observador

27
00:02:16,780 --> 00:02:24,090
eu posso criar apenas um único método que vai ser o método lá evento ocorreu então chamar que o público

28
00:02:25,100 --> 00:02:37,860
volte ao evento ocorreu e vou passar como parâmetro o campo e vou passar o segundo parâmetro o campo

29
00:02:37,950 --> 00:02:41,880
do evento que vai ser o evento.

30
00:02:42,130 --> 00:02:47,400
Ser colocar aqui completo no campo e evento.

31
00:02:47,400 --> 00:02:53,430
Então basicamente quando o evento acontecer eu preciso dizer qual foi o campo que gerou aquele evento.

32
00:02:53,430 --> 00:02:59,220
é preciso também informar que tipo de evento aconteceu isso aqui será o suficiente.

33
00:02:59,220 --> 00:03:03,090
Aí eu posso se quiser também não criar essa interface.

34
00:03:03,570 --> 00:03:11,040
Então por exemplo posso fazer o seguinte tem aqui uma lista de campo um observador que eu vou chamar

35
00:03:11,060 --> 00:03:17,600
aqui algo natural observadores melhor observar.

36
00:03:17,640 --> 00:03:23,880
Eu sempre tem uma tendência pra programar em inglês eu acho que boa parte dos programadores tem essa

37
00:03:23,880 --> 00:03:31,650
tendência e às vezes não soa tão natural como você programa em português algumas nomenclaturas mas isso

38
00:03:31,650 --> 00:03:34,950
é tranquilo o mais importante é que a mensagem seja passada.

39
00:03:35,010 --> 00:03:40,190
E aí quando você for programar você vai perceber qual o padrão já tem de melhor.

40
00:03:40,200 --> 00:03:42,570
Qual é o padrão que a sua empresa vai seguir.

41
00:03:42,930 --> 00:03:48,750
Então aqui seria uma possibilidade criar um observa o campo observador observadores e criar aqui uma

42
00:03:48,750 --> 00:03:49,140
lista.

43
00:03:49,150 --> 00:03:57,130
Outra possibilidade seria simplesmente não criar interface nenhum e usar o mundo as interfaces funcionais

44
00:03:57,130 --> 00:03:59,270
que já estão disponíveis para a gente.

45
00:03:59,360 --> 00:04:03,910
Uma dessas interfaces é o vai consumir vai consumir.

46
00:04:03,920 --> 00:04:05,490
Acho que a gente não usou ela.

47
00:04:05,490 --> 00:04:11,750
Basicamente a gente vai receber dois parâmetros de entrada e essa função não vai retornar nada exatamente

48
00:04:11,760 --> 00:04:17,560
o que a gente tem no campo o Observador recebe dois parâmetros de entrada e não tem nada de retorno.

49
00:04:17,560 --> 00:04:21,380
Se ele retornar VOD vai consumir exatamente isso.

50
00:04:21,420 --> 00:04:27,960
Clicar aqui ou você vai receber uma função chamada Accept que vai receber dois parâmetros genéricos

51
00:04:27,960 --> 00:04:29,730
e vai retornar um valor.

52
00:04:29,950 --> 00:04:34,640
O lugar de já ter passado pelo capítulo de genéricos pra entender o que é que significa isso.

53
00:04:34,650 --> 00:04:36,340
Esses parâmetros genéricos aqui.

54
00:04:36,750 --> 00:04:43,950
Então vai consumir exatamente o que é uma interface funcional é exatamente o campo observador que também

55
00:04:43,950 --> 00:04:46,140
pode ser uma interface funcional.

56
00:04:46,140 --> 00:04:51,940
No nosso caso talvez do ponto de vista de clareza e de facilidade de entendimento talvez seja mais fácil

57
00:04:52,080 --> 00:04:56,100
criar a nossa própria interface mas não necessariamente você precisaria criar.

58
00:04:56,100 --> 00:05:02,490
Você pode colocar em campo o primeiro para o segundo campo evento.

59
00:05:02,830 --> 00:05:07,850
E aí você vai criar que os observadores instancia do mesmo jeito e o resto pode ser inclusive igual

60
00:05:07,850 --> 00:05:08,420
a esse aqui.

61
00:05:08,830 --> 00:05:12,980
Então coloca no aqui embaixo aquilo que seria o outro nome observadores está.

62
00:05:13,270 --> 00:05:15,490
Então são duas estratégias válidas.

63
00:05:15,550 --> 00:05:19,320
Obviamente você não vai usar as duas vai escolher uma eu vou escolher.

64
00:05:19,720 --> 00:05:27,080
Ah sim um certo canal Observador que é uma interface específica nossa e essa também uma interface funcional.

65
00:05:27,080 --> 00:05:30,240
Então a gente pode passar lambida na hora pra executar sem problema nenhum.

66
00:05:30,460 --> 00:05:36,310
Então criamos aqui ocorreu um evento que recebe um campo recebe o campo evento que é o tipo e nós vamos

67
00:05:36,310 --> 00:05:41,340
precisar criar um método público para registrar esses observadores.

68
00:05:41,350 --> 00:05:51,970
Então vou criar aqui o link Void o nome do método vai se registrar ao Observador e eu vou receber o

69
00:05:51,980 --> 00:06:01,090
campo observador o parâmetro que eu vou chamar aqui observo bradou eu vou simplesmente chamar observadores

70
00:06:01,150 --> 00:06:08,590
observadores por algum ponto adicionar observador aqui é um exemplo interessante para a gente usar talvez

71
00:06:08,590 --> 00:06:15,910
o lugar do lixo usar um site para evitar que o mesmo observe e seja registrado duas vezes e a gente

72
00:06:15,910 --> 00:06:17,880
precisar ficar controlando isso.

73
00:06:18,110 --> 00:06:23,370
Aí pode colocar um set ele automaticamente vai não vai aceitar duplicação quando achar um lixo.

74
00:06:23,370 --> 00:06:29,170
Mas aqui só indica que o site poderia ser algo interessante principalmente se você não tem uma ordem

75
00:06:29,650 --> 00:06:31,660
correta para chamar os observadores.

76
00:06:31,660 --> 00:06:36,750
Você quer chamar eles dependem da ordem mas mesmo que tenha hora você pode sempre usar o LinkedIn rede

77
00:06:36,750 --> 00:06:41,590
7 que também dá certo e o próximo passo que eu vou fazer uma vez que eu já criei a minha listas dos

78
00:06:41,590 --> 00:06:44,390
observadores já criou um método para registrar.

79
00:06:44,560 --> 00:06:51,640
Eu vou criar um método privado que eu vou chamar que ele vai tornar Void e o nome desse método vai ser

80
00:06:51,640 --> 00:07:00,120
notificado observadores observadores esse notificar observadores.

81
00:07:00,120 --> 00:07:05,790
Ele é um metro que será chamado apenas internamente dentro do campo quando um evento acontecer ele vai

82
00:07:05,790 --> 00:07:07,670
notificar os observadores.

83
00:07:07,690 --> 00:07:14,790
Ele precisa receber como parâmetro o campo evento que aconteceu porque dentro desse Metro consegue fazer

84
00:07:14,790 --> 00:07:17,770
o seguinte algo pegar observadores.

85
00:07:17,760 --> 00:07:20,170
Ponto estranho.

86
00:07:20,230 --> 00:07:28,450
E aqui eu vou chamar um foguete para cada observador como a chamada letra ao qual então coloca se ela

87
00:07:29,250 --> 00:07:31,800
obedece ao Observador coloca o nome completo.

88
00:07:31,810 --> 00:07:36,930
Eles vão colocar só a letra ela já sabe que o Observador é um observador.

89
00:07:37,150 --> 00:07:39,080
Ponto é o nome do metro.

90
00:07:39,070 --> 00:07:43,280
O evento ocorreu com Eu vou chamar e vou passar quem é o campo.

91
00:07:43,290 --> 00:07:48,090
O campo é fácil o próprio objeto atual já custou dentro da classe campo ideal 10.

92
00:07:48,260 --> 00:07:49,280
E quem é o evento.

93
00:07:49,280 --> 00:07:51,790
O evento foi isso que eu recebi como parâmetro aqui.

94
00:07:52,330 --> 00:07:57,340
Então eu vou chamar esse metro sempre que eu quiser notificar o evento aconteceu.

95
00:07:57,480 --> 00:08:02,140
E aí existem vários pontos do meu código que eu vou saber que o evento aconteceu.

96
00:08:02,160 --> 00:08:06,450
Um exemplo disso é esse método alterar a marcação aqui dentro.

97
00:08:06,600 --> 00:08:12,870
Vai acontecer um evento que vai ser o evento de marcar e desmarcar De acordo com o valor desse atributo

98
00:08:12,870 --> 00:08:13,410
marcado.

99
00:08:13,410 --> 00:08:14,880
Então posso fazer o seguinte.

100
00:08:15,240 --> 00:08:23,550
Se tiver marcado já com o atributo bolha eu vou chamar aqui ou notificar observadores e vou passar o

101
00:08:23,550 --> 00:08:27,050
campo e ventre um ponto marcar.

102
00:08:27,210 --> 00:08:32,740
Ou seja ele vai notificar todos os observadores dizendo que aconteceu um evento de marca.

103
00:08:32,820 --> 00:08:37,550
Caso contrário eu vou chamar esse mesmo método aqui embaixo.

104
00:08:37,750 --> 00:08:44,010
é só que eu vou chamar o método desmarcar porque o sinal está marcado depois que ele já alterou.

105
00:08:44,010 --> 00:08:47,720
Significa que ele foi desmarcado então ele vai entrar aqui.

106
00:08:47,970 --> 00:08:54,810
Outro ponto que eu sei que eu vou chamar esse método para notificar os observadores ou seja qual fluxo

107
00:08:55,080 --> 00:08:57,000
alguém vai lá se registra.

108
00:08:57,090 --> 00:09:00,120
Você pega esse campo observador e adiciona na lista.

109
00:09:00,240 --> 00:09:05,970
Quando você quiser ficar em cima de um evento que aconteceu você vai percorrer todos os observadores

110
00:09:05,970 --> 00:09:07,900
cadastrados para cada um deles.

111
00:09:07,910 --> 00:09:08,950
O time ideal.

112
00:09:09,180 --> 00:09:10,290
Eu vou chamar um método.

113
00:09:10,290 --> 00:09:16,490
O evento ocorreu passando depois que o objeto atual seja o campo e qual o evento que aconteceu percebi

114
00:09:16,500 --> 00:09:17,510
como parâmetro.

115
00:09:17,790 --> 00:09:23,490
Já vi que eu chamei aqui ao notificar observadores marcar e desmarcar aqui dentro.

116
00:09:23,490 --> 00:09:31,350
Quando aconteceu isso eu vou dizer que aconteceu um evento que foi uma explosão realmente de explodir

117
00:09:31,720 --> 00:09:33,340
ou tirar tudo.

118
00:09:33,420 --> 00:09:38,000
Uma observação que se ele explodiu eu não quero fazer mais o resto aqui para baixo.

119
00:09:38,370 --> 00:09:44,190
Então aqui eu chamo Grupo OK porque o campo foi aberto.

120
00:09:44,220 --> 00:09:46,140
Você abriu sim o capitão.

121
00:09:46,200 --> 00:09:50,670
O resultado do Abre atônito falsas e conseguiu abrir o campo ou não.

122
00:09:50,670 --> 00:09:53,630
Nesse caso ele conseguiu abrir o campo só que gerou uma explosão.

123
00:09:53,630 --> 00:10:00,990
Então ele escutou modificada que um evento de explosão e se ele passou por aqui eu vou gerar aqui uma

124
00:10:00,990 --> 00:10:03,770
notificação que o campo foi aberto.

125
00:10:03,830 --> 00:10:12,600
Então antes de tentar abri a vizinhança eu vou criar aqui embaixo que gerou um evento de abrir um outro

126
00:10:12,600 --> 00:10:15,150
ponto que pode gerar um algum evento de abrir.

127
00:10:15,150 --> 00:10:20,970
Na verdade eu posso colocar algo a abrir até aqui antes mas na verdade eu só vou querer geralmente abrir

128
00:10:20,970 --> 00:10:22,200
quando não explodir.

129
00:10:22,500 --> 00:10:26,570
Então é que para acontecer em vez de chamar aqui o aberto para Centro.

130
00:10:26,880 --> 00:10:35,430
Eu posso colocar aqui embaixo falei o seguinte eu vou chamar o set aberto set aberto.

131
00:10:35,460 --> 00:10:45,670
Vou citar aqui um clube para ser aberto e isso eu vou colocar esse evento dentro do set aberto verificar

132
00:10:45,670 --> 00:10:54,240
o seguinte se for aberto aí eu vou chamar o evento notificar observadores dizendo que aconteceu o evento

133
00:10:54,420 --> 00:10:59,610
abriu o campo e só vai acontecer quando o campo aberto for verdadeiro.

134
00:10:59,610 --> 00:11:05,670
Se ele tiver saído de verdadeiro para falso que não existe você não fecha o campo durante o jogo.

135
00:11:05,670 --> 00:11:10,800
Por isso que eu não queria o evento então só vou me preocupar se essa variável for verdadeira.

136
00:11:10,800 --> 00:11:16,680
Se você tiver passado aqui pra ele fechar o carro provavelmente isso vai acontecer quando tiver reiniciado

137
00:11:16,680 --> 00:11:17,610
o jogo.

138
00:11:17,610 --> 00:11:20,130
E aí é um evento que eu não estou muito preocupado em monitorar.

139
00:11:20,280 --> 00:11:25,850
Então já estou notificaram os observadores sempre que aconteceu a 20 de abril no ponto mais específico

140
00:11:25,920 --> 00:11:27,570
ele vai mexer realmente no valor.

141
00:11:27,680 --> 00:11:30,190
Peguei o evento de explodir nesse ponto aqui né.

142
00:11:30,200 --> 00:11:37,530
Se ele tiver fechado não tiver marcado e ele fulminado aí sim ele vai gerar um evento de explodir.

143
00:11:37,530 --> 00:11:43,260
Logo aqui em cima o primeiro evento que a gente modificou foi quando há uma alternância na marcação

144
00:11:43,620 --> 00:11:45,490
entre marcado e desmarcado.

145
00:11:45,630 --> 00:11:51,510
De acordo com o valor da variável a gente vai notificar ou que marcou ou desmarcou e vocês vão ver que

146
00:11:51,510 --> 00:11:54,910
isso vai gerar atualizações lá na nossa gráfica.

147
00:11:54,950 --> 00:12:01,310
A primeira parte da nossa atualização do campo para que a gente possa tanto criar uma interface A gente

148
00:12:01,310 --> 00:12:05,170
criou na verdade um interface que apresenta o observador do campo.

149
00:12:05,210 --> 00:12:10,040
Criamos um evento nesse caso com a única coisa que eu precisava era o tipo de evento.

150
00:12:10,040 --> 00:12:14,640
Eu preferi criar uma enumeração em vez de criar a classe e no nosso observa.

151
00:12:14,660 --> 00:12:20,900
Nós temos um único método e uma interface funcional que é o método evento ocorrer que passa tanto o

152
00:12:20,900 --> 00:12:23,060
campo como o evento que aconteceu

153
00:12:38,000 --> 00:12:44,160
e nesse caso você deve ter percebido já que eu estou misturando métodos com diferentes níveis de invisibilidade.

154
00:12:44,860 --> 00:12:49,810
Não estou organizando digamos assim os metros por um nível de visibilidade ou até costumo fazer isso

155
00:12:49,810 --> 00:12:55,180
é bem comum colocar todos os metros públicos do início todos os metros privados do final.

156
00:12:55,240 --> 00:13:00,490
Mas eu não fiz isso aqui no nosso código mas se você quiser preferir você pode colocar todos os metros

157
00:13:00,490 --> 00:13:01,760
privados no final da classe.

158
00:13:01,760 --> 00:13:07,770
Os públicos no começo é mais uma questão de gosto e como você vai organizar ali o seu colhe mais o fato

159
00:13:07,770 --> 00:13:12,940
é que nós já atualizamos a campo na próxima aulas vamos mexer na classe tabuleiro e até lá.
