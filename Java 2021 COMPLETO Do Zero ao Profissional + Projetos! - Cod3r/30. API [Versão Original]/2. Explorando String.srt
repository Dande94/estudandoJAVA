1
00:00:00,200 --> 00:00:06,980
Só chegou a hora de começarmos a investigação dessa grande enciclopédia que é a API do Java e vai las

2
00:00:07,180 --> 00:00:11,340
adicionando novas aulas aqui nesse capítulo falando sobre a API do Java.

3
00:00:11,350 --> 00:00:18,900
Isto é muito grande e eu tenho certeza que vai ser muito proveitoso você conhecer as principais funcionalidades

4
00:00:18,900 --> 00:00:20,410
que essa API disponibiliza.

5
00:00:20,420 --> 00:00:26,620
Para começar vou começar com algo que é extremamente importante que é explorar um pouco mais sobre a

6
00:00:26,650 --> 00:00:32,070
histria mas se começar a fazer o exemplo propriamente dito eu gostaria de falar algumas observações

7
00:00:32,070 --> 00:00:38,130
a primeira observação aqui string é uma sequência de caracteres no caso do Java delimitado por aspas

8
00:00:38,130 --> 00:00:41,280
duplas é algo muito muito utilizado.

9
00:00:41,280 --> 00:00:44,860
Você utiliza String praticamente todo o tempo.

10
00:00:44,860 --> 00:00:53,400
Então pode ser algo muito utilizado o Java ou a J a máquina virtual do Java cria algumas otimizações

11
00:00:53,400 --> 00:01:00,540
e simula o primeiro fato que diz respeito ao extremo é que ela é um objeto imutável você não consegue

12
00:01:00,660 --> 00:01:02,370
alterar o extremo.

13
00:01:03,020 --> 00:01:04,850
é algo que eu vou mostrar no exemplo.

14
00:01:04,850 --> 00:01:11,160
Como isso se revela na prática mas o que a máquina virtual do Java faz é criar o que ele chama de estilo.

15
00:01:11,190 --> 00:01:16,670
Seria mais ou menos como um grande conjunto com várias historinhas deixou uma grande piscina se for

16
00:01:16,680 --> 00:01:18,060
traduzir de forma literal.

17
00:01:18,180 --> 00:01:20,670
Mas vamos imaginar que seria um grande conjunto.

18
00:01:20,750 --> 00:01:27,120
Suponha que você cria um programa e você usou a palavra Hana no seu programa você atribui uma variável

19
00:01:27,120 --> 00:01:32,970
passou isso para um metro e tal que o Java faz ele pega aquela indiana com a primeira letra maiúscula

20
00:01:33,030 --> 00:01:38,080
e as outras duas minúsculas a palavra joga dentro do BU distritos.

21
00:01:38,220 --> 00:01:44,050
E aí você criou a palavra Bia com a primeira letra maiúscula e o Gui e o minúsculos.

22
00:01:44,070 --> 00:01:48,910
Aí ele pega aquela historinha e coloca no contexto chinês e na segunda vez que você for usar a palavra

23
00:01:48,910 --> 00:01:55,440
Hana ele não vai precisar criar uma nova instância string com a palavra ele simplesmente vai usar a

24
00:01:55,440 --> 00:01:57,650
mesma historinha que está lá por distrito.

25
00:01:57,660 --> 00:02:04,860
Então esse pode strings ele serve pra armazenar todas as instâncias string que você criou durante a

26
00:02:04,860 --> 00:02:11,130
execução do seu programa e uma vez que você criou uma string e vai usar ela vai usá lo em outro lugar.

27
00:02:11,130 --> 00:02:16,570
Por exemplo o status de um produto aberto que você colocou como um escritor em maiúscula.

28
00:02:16,680 --> 00:02:22,530
Se isso tiver lá no exterior ele vai criar apenas uma única vez e vai usar essa string por toda a extensão

29
00:02:22,530 --> 00:02:23,380
do seu programa.

30
00:02:23,380 --> 00:02:30,210
Tá certo então o Pu distrito como o grande repositório grande e local tem todas as historinhas do seu

31
00:02:30,210 --> 00:02:31,140
programa.

32
00:02:31,290 --> 00:02:37,800
Ele é feito pra poder diminuir o consumo de memória para ele usar essa historinha mais uma vez dentro

33
00:02:37,800 --> 00:02:38,600
do seu programa.

34
00:02:38,700 --> 00:02:45,330
Além de haver essa otimização do puro estilo string é um objeto notável por essência uma vez que você

35
00:02:45,330 --> 00:02:52,020
cria um estilingue você não consegue mudar ela que você consegue criar uma nova e atribui a mesma variável

36
00:02:52,060 --> 00:02:53,670
e pra isso eu vou mostrar no exemplo.

37
00:02:53,820 --> 00:03:02,850
Então nós vamos criar agora uma nova classe em Fortaleza conhecem C e o conhece o pacote vai ser API

38
00:03:03,460 --> 00:03:09,810
e o nome da classe vai ser explorado string ou finalizar

39
00:03:12,900 --> 00:03:21,330
terá um metro e monstrinho ela pode ser criado da seguinte forma você coloca string nome recebe o exterior

40
00:03:21,480 --> 00:03:24,890
e você passa a estrela que você quer criar mais vídeo.

41
00:03:24,900 --> 00:03:29,210
Ninguém usa um estilingue na verdade é recomendado que você faça isso.

42
00:03:29,220 --> 00:03:36,750
A forma como nós usamos e não recebe é direto você coloca um extra e automaticamente o Java já vai criar

43
00:03:36,750 --> 00:03:42,390
um instância pra você e vai controlar isso lá no por distritos e nós também fazemos essa questão da

44
00:03:42,390 --> 00:03:49,080
concatenação é muito comum a gente colocar até mais trilhos com mais algo otimizado ele vai simplesmente

45
00:03:49,170 --> 00:03:55,710
concatenar um estilingue na outra então é um operador também vale no contexto Listening nós vamos ver

46
00:03:55,830 --> 00:04:01,720
aqui alguns metros importantes e no final vou fazer uma discussão bem rápida sobre a questão das tirinhas

47
00:04:01,880 --> 00:04:06,840
imutável e mostrar pra você que isso é uma verdade estavam lá alguns metros importantes e todos eles

48
00:04:06,850 --> 00:04:13,120
eu colocarei o System Audio pra mostrar no console o que foi que aconteceu depois da execução do método.

49
00:04:13,200 --> 00:04:20,780
Eu vou colocar aqui nome e ponto Ju Keys que é pra ele pegar uma determinada string e colocar tudo em

50
00:04:20,780 --> 00:04:26,700
letra maiúscula também tem um método de bloqueio que é pra colocar todas as letras minúsculas.

51
00:04:26,960 --> 00:04:34,170
Tem um outro método nome e ponto leve pra dizer o comprimento da histria quantos caracteres tem o caso

52
00:04:34,190 --> 00:04:43,140
que tem 8 e agora nome Ponto subdistrito que é pra pegar o Apache da Triangle começando pelo índice

53
00:04:43,260 --> 00:04:48,730
inicial até o índice final aqui no caso ele vai pegar triângulo L.

54
00:04:49,470 --> 00:04:57,060
Depois vou colocar o nome do Index off e vou passar um caractere que vai me dizer qual é o índice que

55
00:04:57,060 --> 00:05:01,170
aparece esse caractere ele vai percorrer a histria e vai me dizer o primeiro o índice que ele achou

56
00:05:01,170 --> 00:05:01,980
esse caractere.

57
00:05:02,040 --> 00:05:03,040
Então tá.

58
00:05:03,360 --> 00:05:11,430
Ele vai dizer que achou a posição 6 continuado eu vou pegar agora o Chart na posição 6 usando o método

59
00:05:11,430 --> 00:05:17,950
Sha net ele vai me dizer que na posição 6 está a letra D continuado.

60
00:05:17,950 --> 00:05:23,380
Vou colocar aqui nome e como se ignoro isso é importante.

61
00:05:23,460 --> 00:05:29,410
Se você quer comparar duas strings sem levar em consideração as letras maiúsculas e minúsculas está

62
00:05:29,410 --> 00:05:35,050
certo então esse método serve pra isso ele vai fazer uma comparação sem olhar as letras maiúsculas e

63
00:05:35,050 --> 00:05:40,410
minúsculas aqui eu tenho o nome todo e minúsculo e aqui eu coloquei a primeira letra maiúscula.

64
00:05:40,960 --> 00:05:47,950
Então mesmo assim o resultado vai da verdadeira porque ele vai ignorar as letras maiúsculas e minúsculas

65
00:05:48,290 --> 00:05:50,660
continuarão assistem aos ali.

66
00:05:50,860 --> 00:05:53,490
Nome ponto está o web.

67
00:05:53,630 --> 00:05:59,890
Então esse método é usado pra saber se o time começa com um determinado trecho lá Listening dá certo

68
00:06:00,010 --> 00:06:06,920
também tem um método chamado Web pra saber se um determinado trecho é baixo com o final da estrela.

69
00:06:06,940 --> 00:06:09,380
Continuando aqui eu tenho um nome.

70
00:06:09,490 --> 00:06:16,650
Ponto esse empate pra saber se a estria está vazia na verdade ela não está mais lá falso e vou aqui

71
00:06:16,660 --> 00:06:19,830
também o Carlos nome e ponto com

72
00:06:23,170 --> 00:06:31,760
eu posso fazer isso em nome que no caso aqui Leonardo onde concatenar com esse é legal.

73
00:06:31,810 --> 00:06:38,180
Ele vai retornar uma Triangle que é Leonardo é legal e depois eu faço o outro com o Cage com um símbolo

74
00:06:38,190 --> 00:06:43,100
de exclamação ou seja eu consegui colocar uma chamada atrás da outra.

75
00:06:43,100 --> 00:06:51,640
Tá certo mas está aqui e ele chamou aqui e note que nós chamamos aqui vários métodos mas ninguém mais

76
00:06:51,810 --> 00:06:55,880
trigo permanece imutável como o permanece imutável.

77
00:06:55,900 --> 00:07:00,170
Se eu colocar assistem ao de preencher ali o nome e o resetar.

78
00:07:00,220 --> 00:07:06,020
Você percebe que o valor das trilhas continua sendo um lado que é justamente o valor lá de cima.

79
00:07:06,030 --> 00:07:10,640
Será tirar esse concatenação o valor foi esse.

80
00:07:10,670 --> 00:07:17,550
Coloquei Leonardo ponto todas as letras maiúsculas subdistrito peguei uma letra peguei.

81
00:07:17,690 --> 00:07:20,540
Qual é o caractere em determinada posição.

82
00:07:20,540 --> 00:07:25,390
Comparei com o começo cinzento com o KTM e fiz várias coisas mais no final.

83
00:07:25,470 --> 00:07:30,880
A estreia continua exatamente a mesma Leonardo que foi aqui e coloquei lá no início.

84
00:07:31,020 --> 00:07:36,020
E se por acaso eu quiser mudar o valor da histria quiser colocar um novo valor para variável aí sim

85
00:07:36,440 --> 00:07:38,930
você vai fazer simplesmente uma atribuição.

86
00:07:38,930 --> 00:07:41,060
Você vai pagar aqui no caso.

87
00:07:41,270 --> 00:07:45,720
Eu fiz várias chamadas em sequência que eu fiz eu peguei a variável nome.

88
00:07:46,190 --> 00:07:48,080
Chamei o método que a PEC.

89
00:07:48,140 --> 00:07:54,830
Ou seja isso aqui vai retornar uma string e ela vai ter todas as letras maiúsculas depois que eu peguei

90
00:07:54,830 --> 00:07:56,590
o nome Leonardo todo em maiúsculo.

91
00:07:56,600 --> 00:08:01,220
Aí eu fiz um subdistrito da posição zero até três.

92
00:08:01,280 --> 00:08:07,640
Ele vai pegar apenas as primeiras três letras no caso leu e depois eu concatenar ei é legal.

93
00:08:07,670 --> 00:08:11,680
E no final esse resultado eu armazenem na variável nome.

94
00:08:11,690 --> 00:08:16,500
Aí sim eu consegui mudar ela se eu fui o primeiro console a variável nome.

95
00:08:16,640 --> 00:08:25,110
Vocês vão perceber que o resultado vai ser justamente o legal porque eu atribuí a variável nome.

96
00:08:25,130 --> 00:08:30,180
O resultado que eu tinha operado até aqui o nome não tinha sido mudado.

97
00:08:30,200 --> 00:08:35,240
Só mudou pelo fato de eu ter atribuído a própria variável nome e o resultado dessa operação.

98
00:08:35,240 --> 00:08:41,030
Eu acredito que nessa altura o uso de strings pra você seja bem tranquilo que é uma sequência de caracteres

99
00:08:41,030 --> 00:08:42,950
delimitado por aspas duplas.

100
00:08:43,230 --> 00:08:48,890
E o fato de haver concatenação a gente já fez concatenação distribuiu de vários exemplos acho também

101
00:08:48,890 --> 00:08:50,370
isso não é um problema.

102
00:08:50,390 --> 00:08:55,700
Mostrei aqui pra você alguns dos exemplos de métodos importantes que têm dentro do trem que tem outros

103
00:08:55,700 --> 00:08:58,200
métodos também você pode explorar.

104
00:08:58,310 --> 00:09:05,540
Basta colocar o nome ponto contra o espaço você vai ter acesso a todas as funcionalidades que estão

105
00:09:05,540 --> 00:09:06,890
disponíveis.

106
00:09:06,990 --> 00:09:10,920
Mas por enquanto como aqui certo.

107
00:09:11,110 --> 00:09:16,520
é importante que você entenda sobre essas duas coisas que eu falei na áustria ela tem uma certa otimização

108
00:09:16,520 --> 00:09:22,760
de consumo de memória que é chamada lá e pune os crimes é o lugar onde é usado todas as instruções que

109
00:09:22,760 --> 00:09:25,560
você foi criado durante a execução do seu programa.

110
00:09:25,580 --> 00:09:32,390
Outra coisa fundamental é importante você saber que a string ela é imutável ou seja não há nada que

111
00:09:32,390 --> 00:09:37,850
você faça em cima de um string que vai fazer com que ela mude o valor a não ser que você atribua para

112
00:09:37,880 --> 00:09:39,740
a mesma variável que você está trabalhando.

113
00:09:39,740 --> 00:09:41,890
Aí sim você mudou a referência.

114
00:09:41,900 --> 00:09:47,660
Posso apontar para um novo string mas a estrela original continua lá no pu sem ser alterada.

115
00:09:47,660 --> 00:09:54,350
Pra finalizar eu vou dar uma dica que é o seguinte Quando você cria várias concatenação de string não

116
00:09:54,350 --> 00:09:59,020
só o resultado final é armazenado no pu mais todos os resultados parciais.

117
00:09:59,060 --> 00:10:06,310
Vamos supor você concatenar ou a mais b mais C cada um é um estilingue delimitado por aspas duplas a

118
00:10:06,560 --> 00:10:12,950
entre aspas duplas concatenar com b aspas duplas concatenar com c aspas duplas.

119
00:10:13,370 --> 00:10:22,070
O resultado final seria a b c e o ABC com certeza vai ser armazenado no ponto mais o A com B gera um

120
00:10:22,140 --> 00:10:26,540
extreme A B pra depois ser colocado em nada com C.

121
00:10:26,750 --> 00:10:34,850
Então essa A B também vai estar no pu assim como a b e c e no final tinha a b c.

122
00:10:35,030 --> 00:10:42,840
Então só nessa concatenação aí 3 você gerou a estrangular vai ficar no pu de B vai ficar não pois 36

123
00:10:42,920 --> 00:10:49,500
vai ficar no pu estende a mais b vai ficar o PU e tinha a b c vai ficar no pu quantidade extremo isso

124
00:10:49,520 --> 00:10:55,820
que foi gerado grande isso significa que você tem que ter cuidado na hora de principalmente laços de

125
00:10:55,820 --> 00:11:01,440
repetição você concatenar muito estranho porque isso pode gerar uma quantidade muito grande de estímulos

126
00:11:01,450 --> 00:11:02,540
no distrito.

127
00:11:02,930 --> 00:11:09,520
Então pra isso existe uma classe chamada Extreme Builder que eu vou falar na próxima aula explicando

128
00:11:09,530 --> 00:11:15,320
que é muito melhor você usar o String Builder quando for fazer muitas concatenar ações e no final você

129
00:11:15,320 --> 00:11:21,290
já era Astrid que você precisa já toda concatenar com o resultado final porque se você for concatenar

130
00:11:21,340 --> 00:11:26,240
dentro de um laço fo isso pode gerar uma quantidade muito grande de estilingues dentro do PU e não vai

131
00:11:26,240 --> 00:11:28,430
ser tão bom do ponto de vista de performance.
