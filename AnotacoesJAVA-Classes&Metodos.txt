F076 - 
introdução
o que é classe, metodo, relação entre elas;
orientação a objetos; paradigma da programação;

F077 - 
Revisando o uso de Classe até momento do curso;

F078 - 
Classes e Objetos
anatomia da Classe - por boa pratica usar PascalCase;
O que tem dentro da Classe - atributos(substantivos -> dados) e comportamentos(ações-> métodos);
Relação do objeto entre mundo e digital;
Membros de uma Classe;
Orientação ao objeto -> aproximar comportamento de dados;

F079 - 
Uma classe define um TIPO;
Estrutura do dado;
A Classe representa  uma abstração(simplificação);
tentar modelar no mundo digital uma cópia do mundo real;
objetos são a estrutura de uma classe, e classe representa a estrutura de dados;
objeto == instâcia (são sinonimos);
instaciar -> criar objetos numa classe;

Relação entre Classe e Objeto;

construtor;

F080 - 
Membros de uma classe
Variaveis / constantes;
Construtores
Métodos
Classes

Atributos:
Var -> classe e objeto
Const -> classe e objeto

Métodos -> classe objeto

Static

notação '.ponto' e como faz para acessar os membros de um objeto -> System.out.println() - .println pertence ao .out que por sua fez pertence ao System;

F081 - 
Classe Produto
A Classe Produto criada no outro arquivo,aqui é usada como Tipo(como se fosse String,in e double, e atrvés da notação ponto acesso seus atributos(nome,preco e desconto));
p1 / p2 é como fica setado pra usar o tipo Produto, como se fosse a variaél que irá comporta o acesso à aquela Classe(Tipo);

F082 - 
Desafio Classe Data;
F083 - 
Sucesso no desafio;

F084 - 
Método
Ações, comportamentos , algoritmo;
Uma sequência de passos;
Conjunto de entradas e retornos;
Conjunto de entrada sem retornos;
sem entrada e sem retorno;
Conveção CamelCase;

int nomeMetodo (){};
String nomeMetodo (){};
double nomeMetodo (){};
Void nomeMetodo (){};

return; -> usado pra devolver o processamento da função;

tipo nomeMetodo(tipo nome, ..){bloco de código};

identidade do metodo, onde java analisa o perfil anatomico da função e impede duplicação;
boolean | nome(int , float); |-> identidade do metodo/ assinatura/

F085 -
Método - anatomia e instanciamento na prática;
Syste.out.println() 
System -> Classe
.out -> atributo
.println() -> metodo

como usar parametros da classe final e usar como argumento;

F086 -
Desafio Medoto Data;
F087 - 
sucesso no desafio;
Reassstir aula, muitas dicas legais!!

F088 - 
Construtor(es);
São metodos especiais que criam objetos a partir de uma classe; um portal entre classe e objeto;

Produto p1 = new Produto(); -> construtor padrão, não tem parametro;

Produto(int a){} -> construtor explicito;
Produto p1 = new Produto(3); -> agora a passagem de parametro se faz necessária;

pode ter mais de 1 parametros porém a assinatura te que ser diferente;

restrições:
1- Nome da classe e construtor deve ser a mesma;
2- Const. não tem retorno(Void, Integer, Double, String);
F089 -
aplicando construtores;

F090 - 
Desafio construtores;
F091 - 
Sucesso Desafio construtores;

F092 - 
Membros de Classe: valor associado a Classe;
Membros de Instância:Valor associado ao objeto;
Static: "constante" associada a classe para instancias;
F093 - 
Membros de Classe VS Membros de Instância;
System.out.println(Math.PI);//PI versão nativa do JAVA;
final static double PI= 3.14;//com a inclusão da palavra 'static' o pi passa estar associado a classe;
//com inclusão da palavra 'final' a variavel se torna constante;
//metodo static;

F094 - 
Desafio Static;
F095 - 
Sucesso Desafio Static;

F096 - 
Atribuição por valor;
Atribuição por referencia;
garbage collector;
metodo Clone;
______________________________________________________________________________________________________________________

